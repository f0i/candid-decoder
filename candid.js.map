{
  "version": 3,
  "sources": ["../node_modules/@dfinity/principal/src/utils/base32.ts", "../node_modules/@dfinity/principal/src/utils/getCrc.ts", "../node_modules/@noble/hashes/src/utils.ts", "../node_modules/@noble/hashes/src/_md.ts", "../node_modules/@noble/hashes/src/sha2.ts", "../node_modules/@noble/hashes/src/sha256.ts", "../node_modules/@dfinity/principal/src/utils/sha224.ts", "../node_modules/@dfinity/principal/src/index.ts", "../dist/esm/candidDecoder.js", "../dist/esm/candidFieldNames.js", "../dist/esm/utils.js", "candid.ts"],
  "sourcesContent": ["const alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\n\n// Build a lookup table for decoding.\nconst lookupTable: Record<string, number> = Object.create(null);\nfor (let i = 0; i < alphabet.length; i++) {\n  lookupTable[alphabet[i]] = i;\n}\n\n// Add aliases for rfc4648.\nlookupTable['0'] = lookupTable.o;\nlookupTable['1'] = lookupTable.i;\n\n/**\n * @param input The input array to encode.\n * @returns A Base32 string encoding the input.\n */\nexport function encode(input: Uint8Array): string {\n  // How many bits will we skip from the first byte.\n  let skip = 0;\n  // 5 high bits, carry from one byte to the next.\n  let bits = 0;\n\n  // The output string in base32.\n  let output = '';\n\n  function encodeByte(byte: number) {\n    if (skip < 0) {\n      // we have a carry from the previous byte\n      bits |= byte >> -skip;\n    } else {\n      // no carry\n      bits = (byte << skip) & 248;\n    }\n\n    if (skip > 3) {\n      // Not enough data to produce a character, get us another one\n      skip -= 8;\n      return 1;\n    }\n\n    if (skip < 4) {\n      // produce a character\n      output += alphabet[bits >> 3];\n      skip += 5;\n    }\n\n    return 0;\n  }\n\n  for (let i = 0; i < input.length; ) {\n    i += encodeByte(input[i]);\n  }\n\n  return output + (skip < 0 ? alphabet[bits >> 3] : '');\n}\n\n/**\n * @param input The base32 encoded string to decode.\n */\nexport function decode(input: string): Uint8Array {\n  // how many bits we have from the previous character.\n  let skip = 0;\n  // current byte we're producing.\n  let byte = 0;\n\n  const output = new Uint8Array(((input.length * 4) / 3) | 0);\n  let o = 0;\n\n  function decodeChar(char: string) {\n    // Consume a character from the stream, store\n    // the output in this.output. As before, better\n    // to use update().\n    let val = lookupTable[char.toLowerCase()];\n    if (val === undefined) {\n      throw new Error(`Invalid character: ${JSON.stringify(char)}`);\n    }\n\n    // move to the high bits\n    val <<= 3;\n    byte |= val >>> skip;\n    skip += 5;\n\n    if (skip >= 8) {\n      // We have enough bytes to produce an output\n      output[o++] = byte;\n      skip -= 8;\n\n      if (skip > 0) {\n        byte = (val << (5 - skip)) & 255;\n      } else {\n        byte = 0;\n      }\n    }\n  }\n\n  for (const c of input) {\n    decodeChar(c);\n  }\n\n  return output.slice(0, o);\n}\n", "// This file is translated to JavaScript from\n// https://lxp32.github.io/docs/a-simple-example-crc32-calculation/\nconst lookUpTable: Uint32Array = new Uint32Array([\n  0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f, 0xe963a535, 0x9e6495a3,\n  0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988, 0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91,\n  0x1db71064, 0x6ab020f2, 0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,\n  0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9, 0xfa0f3d63, 0x8d080df5,\n  0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172, 0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b,\n  0x35b5a8fa, 0x42b2986c, 0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,\n  0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423, 0xcfba9599, 0xb8bda50f,\n  0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924, 0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d,\n  0x76dc4190, 0x01db7106, 0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,\n  0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d, 0x91646c97, 0xe6635c01,\n  0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e, 0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457,\n  0x65b0d9c6, 0x12b7e950, 0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,\n  0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7, 0xa4d1c46d, 0xd3d6f4fb,\n  0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0, 0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9,\n  0x5005713c, 0x270241aa, 0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,\n  0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81, 0xb7bd5c3b, 0xc0ba6cad,\n  0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a, 0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683,\n  0xe3630b12, 0x94643b84, 0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,\n  0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb, 0x196c3671, 0x6e6b06e7,\n  0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc, 0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5,\n  0xd6d6a3e8, 0xa1d1937e, 0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,\n  0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55, 0x316e8eef, 0x4669be79,\n  0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236, 0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f,\n  0xc5ba3bbe, 0xb2bd0b28, 0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,\n  0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f, 0x72076785, 0x05005713,\n  0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38, 0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21,\n  0x86d3d2d4, 0xf1d4e242, 0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,\n  0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69, 0x616bffd3, 0x166ccf45,\n  0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2, 0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db,\n  0xaed16a4a, 0xd9d65adc, 0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,\n  0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693, 0x54de5729, 0x23d967bf,\n  0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94, 0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d,\n]);\n\n/**\n * Calculate the CRC32 of an ArrayBufferLike.\n * @param buf The BufferLike to calculate the CRC32 of.\n */\nexport function getCrc32(buf: ArrayBufferLike): number {\n  const b = new Uint8Array(buf);\n  let crc = -1;\n\n  for (let i = 0; i < b.length; i++) {\n    const byte = b[i];\n    const t = (byte ^ crc) & 0xff;\n    crc = lookUpTable[t] ^ (crc >>> 8);\n  }\n\n  return (crc ^ -1) >>> 0;\n}\n", "/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a: unknown): a is Uint8Array {\n  return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n\n/** Asserts something is positive integer. */\nexport function anumber(n: number): void {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error('positive integer expected, got ' + n);\n}\n\n/** Asserts something is Uint8Array. */\nexport function abytes(b: Uint8Array | undefined, ...lengths: number[]): void {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n\n/** Asserts something is hash */\nexport function ahash(h: IHash): void {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.createHasher');\n  anumber(h.outputLen);\n  anumber(h.blockLen);\n}\n\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance: any, checkFinished = true): void {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\n\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out: any, instance: any): void {\n  abytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error('digestInto() expects output buffer of length at least ' + min);\n  }\n}\n\n/** Generic type encompassing 8/16/32-byte arrays - but not 64-byte. */\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr: TypedArray): Uint8Array {\n  return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr: TypedArray): Uint32Array {\n  return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays: TypedArray[]): void {\n  for (let i = 0; i < arrays.length; i++) {\n    arrays[i].fill(0);\n  }\n}\n\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr: TypedArray): DataView {\n  return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word: number, shift: number): number {\n  return (word << (32 - shift)) | (word >>> shift);\n}\n\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word: number, shift: number): number {\n  return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE: boolean = /* @__PURE__ */ (() =>\n  new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n\n/** The byte swap operation for uint32 */\nexport function byteSwap(word: number): number {\n  return (\n    ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff)\n  );\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE: (n: number) => number = isLE\n  ? (n: number) => n\n  : (n: number) => byteSwap(n);\n\n/** @deprecated */\nexport const byteSwapIfBE: typeof swap8IfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr: Uint32Array): Uint32Array {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n  return arr;\n}\n\nexport const swap32IfBE: (u: Uint32Array) => Uint32Array = isLE\n  ? (u: Uint32Array) => u\n  : byteSwap32;\n\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin: boolean = /* @__PURE__ */ (() =>\n  // @ts-ignore\n  typeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // @ts-ignore\n  if (hasHexBuiltin) return bytes.toHex();\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 } as const;\nfunction asciiToBase16(ch: number): number | undefined {\n  if (ch >= asciis._0 && ch <= asciis._9) return ch - asciis._0; // '2' => 50-48\n  if (ch >= asciis.A && ch <= asciis.F) return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n  if (ch >= asciis.a && ch <= asciis.f) return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n  return;\n}\n\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // @ts-ignore\n  if (hasHexBuiltin) return Uint8Array.fromHex(hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n  }\n  return array;\n}\n\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async (): Promise<void> => {};\n\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(\n  iters: number,\n  tick: number,\n  cb: (i: number) => void\n): Promise<void> {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols, but ts doesn't see them: https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error('string expected');\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes: Uint8Array): string {\n  return new TextDecoder().decode(bytes);\n}\n\n/** Accepted input of hash functions. Strings are converted to byte arrays. */\nexport type Input = string | Uint8Array;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** KDFs can accept string or Uint8Array for user convenience. */\nexport type KDFInput = string | Uint8Array;\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data: KDFInput): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n    throw new Error('options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\n/** Hash interface. */\nexport type IHash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\n\n/** For runtime check if class implements interface */\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  abstract clone(): T;\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n/** Hash function */\nexport type CHash = ReturnType<typeof createHasher>;\n/** Hash function with output */\nexport type CHashO = ReturnType<typeof createOptHasher>;\n/** XOF with output */\nexport type CHashXO = ReturnType<typeof createXOFer>;\n\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher<T extends Hash<T>>(\n  hashCons: () => Hash<T>\n): {\n  (msg: Input): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(): Hash<T>;\n} {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function createOptHasher<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): Hash<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function createXOFer<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n): {\n  (msg: Input, opts?: T): Uint8Array;\n  outputLen: number;\n  blockLen: number;\n  create(opts?: T): HashXOF<H>;\n} {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts?: T) => hashCons(opts);\n  return hashC;\n}\nexport const wrapConstructor: typeof createHasher = createHasher;\nexport const wrapConstructorWithOpts: typeof createOptHasher = createOptHasher;\nexport const wrapXOFConstructorWithOpts: typeof createXOFer = createXOFer;\n\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return Uint8Array.from(crypto.randomBytes(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { type Input, Hash, abytes, aexists, aoutput, clean, createView, toBytes } from './utils.ts';\n\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(\n  view: DataView,\n  byteOffset: number,\n  value: bigint,\n  isLE: boolean\n): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/** Choice: a ? b : c */\nexport function Chi(a: number, b: number, c: number): number {\n  return (a & b) ^ (~a & c);\n}\n\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a: number, b: number, c: number): number {\n  return (a & b) ^ (a & c) ^ (b & c);\n}\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n\n  readonly blockLen: number;\n  readonly outputLen: number;\n  readonly padOffset: number;\n  readonly isLE: boolean;\n\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(blockLen: number, outputLen: number, padOffset: number, isLE: boolean) {\n    super();\n    this.blockLen = blockLen;\n    this.outputLen = outputLen;\n    this.padOffset = padOffset;\n    this.isLE = isLE;\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    aexists(this);\n    data = toBytes(data);\n    abytes(data);\n    const { view, buffer, blockLen } = this;\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array): void {\n    aexists(this);\n    aoutput(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    clean(this.buffer.subarray(pos));\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest(): Uint8Array {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.destroyed = destroyed;\n    to.finished = finished;\n    to.length = length;\n    to.pos = pos;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n  0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV: Uint32Array = /* @__PURE__ */ Uint32Array.from([\n  0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n  0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n", "/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from './_md.ts';\nimport * as u64 from './_u64.ts';\nimport { type CHash, clean, createHasher, rotr } from './utils.ts';\n\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  protected A: number = SHA256_IV[0] | 0;\n  protected B: number = SHA256_IV[1] | 0;\n  protected C: number = SHA256_IV[2] | 0;\n  protected D: number = SHA256_IV[3] | 0;\n  protected E: number = SHA256_IV[4] | 0;\n  protected F: number = SHA256_IV[5] | 0;\n  protected G: number = SHA256_IV[6] | 0;\n  protected H: number = SHA256_IV[7] | 0;\n\n  constructor(outputLen: number = 32) {\n    super(64, outputLen, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ): void {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean(): void {\n    clean(SHA256_W);\n  }\n  destroy(): void {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    clean(this.buffer);\n  }\n}\n\nexport class SHA224 extends SHA256 {\n  protected A: number = SHA224_IV[0] | 0;\n  protected B: number = SHA224_IV[1] | 0;\n  protected C: number = SHA224_IV[2] | 0;\n  protected D: number = SHA224_IV[3] | 0;\n  protected E: number = SHA224_IV[4] | 0;\n  protected F: number = SHA224_IV[5] | 0;\n  protected G: number = SHA224_IV[6] | 0;\n  protected H: number = SHA224_IV[7] | 0;\n  constructor() {\n    super(28);\n  }\n}\n\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\n\nexport class SHA512 extends HashMD<SHA512> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  // h -- high 32 bits, l -- low 32 bits\n  protected Ah: number = SHA512_IV[0] | 0;\n  protected Al: number = SHA512_IV[1] | 0;\n  protected Bh: number = SHA512_IV[2] | 0;\n  protected Bl: number = SHA512_IV[3] | 0;\n  protected Ch: number = SHA512_IV[4] | 0;\n  protected Cl: number = SHA512_IV[5] | 0;\n  protected Dh: number = SHA512_IV[6] | 0;\n  protected Dl: number = SHA512_IV[7] | 0;\n  protected Eh: number = SHA512_IV[8] | 0;\n  protected El: number = SHA512_IV[9] | 0;\n  protected Fh: number = SHA512_IV[10] | 0;\n  protected Fl: number = SHA512_IV[11] | 0;\n  protected Gh: number = SHA512_IV[12] | 0;\n  protected Gl: number = SHA512_IV[13] | 0;\n  protected Hh: number = SHA512_IV[14] | 0;\n  protected Hl: number = SHA512_IV[15] | 0;\n\n  constructor(outputLen: number = 64) {\n    super(128, outputLen, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ): void {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean(): void {\n    clean(SHA512_W_H, SHA512_W_L);\n  }\n  destroy(): void {\n    clean(this.buffer);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nexport class SHA384 extends SHA512 {\n  protected Ah: number = SHA384_IV[0] | 0;\n  protected Al: number = SHA384_IV[1] | 0;\n  protected Bh: number = SHA384_IV[2] | 0;\n  protected Bl: number = SHA384_IV[3] | 0;\n  protected Ch: number = SHA384_IV[4] | 0;\n  protected Cl: number = SHA384_IV[5] | 0;\n  protected Dh: number = SHA384_IV[6] | 0;\n  protected Dl: number = SHA384_IV[7] | 0;\n  protected Eh: number = SHA384_IV[8] | 0;\n  protected El: number = SHA384_IV[9] | 0;\n  protected Fh: number = SHA384_IV[10] | 0;\n  protected Fl: number = SHA384_IV[11] | 0;\n  protected Gh: number = SHA384_IV[12] | 0;\n  protected Gl: number = SHA384_IV[13] | 0;\n  protected Hh: number = SHA384_IV[14] | 0;\n  protected Hl: number = SHA384_IV[15] | 0;\n\n  constructor() {\n    super(48);\n  }\n}\n\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n  0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n  0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n  0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n  0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\n\nexport class SHA512_224 extends SHA512 {\n  protected Ah: number = T224_IV[0] | 0;\n  protected Al: number = T224_IV[1] | 0;\n  protected Bh: number = T224_IV[2] | 0;\n  protected Bl: number = T224_IV[3] | 0;\n  protected Ch: number = T224_IV[4] | 0;\n  protected Cl: number = T224_IV[5] | 0;\n  protected Dh: number = T224_IV[6] | 0;\n  protected Dl: number = T224_IV[7] | 0;\n  protected Eh: number = T224_IV[8] | 0;\n  protected El: number = T224_IV[9] | 0;\n  protected Fh: number = T224_IV[10] | 0;\n  protected Fl: number = T224_IV[11] | 0;\n  protected Gh: number = T224_IV[12] | 0;\n  protected Gl: number = T224_IV[13] | 0;\n  protected Hh: number = T224_IV[14] | 0;\n  protected Hl: number = T224_IV[15] | 0;\n\n  constructor() {\n    super(28);\n  }\n}\n\nexport class SHA512_256 extends SHA512 {\n  protected Ah: number = T256_IV[0] | 0;\n  protected Al: number = T256_IV[1] | 0;\n  protected Bh: number = T256_IV[2] | 0;\n  protected Bl: number = T256_IV[3] | 0;\n  protected Ch: number = T256_IV[4] | 0;\n  protected Cl: number = T256_IV[5] | 0;\n  protected Dh: number = T256_IV[6] | 0;\n  protected Dl: number = T256_IV[7] | 0;\n  protected Eh: number = T256_IV[8] | 0;\n  protected El: number = T256_IV[9] | 0;\n  protected Fh: number = T256_IV[10] | 0;\n  protected Fl: number = T256_IV[11] | 0;\n  protected Gh: number = T256_IV[12] | 0;\n  protected Gl: number = T256_IV[13] | 0;\n  protected Hh: number = T256_IV[14] | 0;\n  protected Hl: number = T256_IV[15] | 0;\n\n  constructor() {\n    super(32);\n  }\n}\n\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256: CHash = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224: CHash = /* @__PURE__ */ createHasher(() => new SHA224());\n\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512: CHash = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384: CHash = /* @__PURE__ */ createHasher(() => new SHA384());\n\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256: CHash = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224: CHash = /* @__PURE__ */ createHasher(() => new SHA512_224());\n", "/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport {\n  SHA224 as SHA224n,\n  sha224 as sha224n,\n  SHA256 as SHA256n,\n  sha256 as sha256n,\n} from './sha2.ts';\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256: typeof SHA256n = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256: typeof sha256n = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224: typeof SHA224n = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224: typeof sha224n = sha224n;\n", "import { sha224 as jsSha224 } from '@noble/hashes/sha256';\n\n/**\n * Returns the SHA224 hash of the buffer.\n * @param data Arraybuffer to encode\n */\nexport function sha224(data: ArrayBuffer): Uint8Array {\n  return jsSha224.create().update(new Uint8Array(data)).digest();\n}\n", "import { decode, encode } from './utils/base32';\nimport { getCrc32 } from './utils/getCrc';\nimport { sha224 } from './utils/sha224';\n\nexport const JSON_KEY_PRINCIPAL = '__principal__';\nconst SELF_AUTHENTICATING_SUFFIX = 2;\nconst ANONYMOUS_SUFFIX = 4;\n\nconst MANAGEMENT_CANISTER_PRINCIPAL_TEXT_STR = 'aaaaa-aa';\n\nconst fromHexString = (hexString: string) =>\n  new Uint8Array((hexString.match(/.{1,2}/g) ?? []).map(byte => parseInt(byte, 16)));\n\nconst toHexString = (bytes: Uint8Array) =>\n  bytes.reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n\nexport type JsonnablePrincipal = {\n  [JSON_KEY_PRINCIPAL]: string;\n};\n\nexport class Principal {\n  public static anonymous(): Principal {\n    return new this(new Uint8Array([ANONYMOUS_SUFFIX]));\n  }\n\n  /**\n   * Utility method, returning the principal representing the management canister, decoded from the hex string `'aaaaa-aa'`\n   * @returns {Principal} principal of the management canister\n   */\n  public static managementCanister(): Principal {\n    return this.fromText(MANAGEMENT_CANISTER_PRINCIPAL_TEXT_STR);\n  }\n\n  public static selfAuthenticating(publicKey: Uint8Array): Principal {\n    const sha = sha224(publicKey);\n    return new this(new Uint8Array([...sha, SELF_AUTHENTICATING_SUFFIX]));\n  }\n\n  public static from(other: unknown): Principal {\n    if (typeof other === 'string') {\n      return Principal.fromText(other);\n    } else if (Object.getPrototypeOf(other) === Uint8Array.prototype) {\n      return new Principal(other as Uint8Array);\n    } else if (\n      typeof other === 'object' &&\n      other !== null &&\n      (other as Principal)._isPrincipal === true\n    ) {\n      return new Principal((other as Principal)._arr);\n    }\n\n    throw new Error(`Impossible to convert ${JSON.stringify(other)} to Principal.`);\n  }\n\n  public static fromHex(hex: string): Principal {\n    return new this(fromHexString(hex));\n  }\n\n  public static fromText(text: string): Principal {\n    let maybePrincipal = text;\n    // If formatted as JSON string, parse it first\n    if (text.includes(JSON_KEY_PRINCIPAL)) {\n      const obj = JSON.parse(text);\n      if (JSON_KEY_PRINCIPAL in obj) {\n        maybePrincipal = obj[JSON_KEY_PRINCIPAL];\n      }\n    }\n\n    const canisterIdNoDash = maybePrincipal.toLowerCase().replace(/-/g, '');\n\n    let arr = decode(canisterIdNoDash);\n    arr = arr.slice(4, arr.length);\n\n    const principal = new this(arr);\n    if (principal.toText() !== maybePrincipal) {\n      throw new Error(\n        `Principal \"${principal.toText()}\" does not have a valid checksum (original value \"${maybePrincipal}\" may not be a valid Principal ID).`,\n      );\n    }\n\n    return principal;\n  }\n\n  public static fromUint8Array(arr: Uint8Array): Principal {\n    return new this(arr);\n  }\n\n  public readonly _isPrincipal = true;\n\n  protected constructor(private _arr: Uint8Array) {}\n\n  public isAnonymous(): boolean {\n    return this._arr.byteLength === 1 && this._arr[0] === ANONYMOUS_SUFFIX;\n  }\n\n  public toUint8Array(): Uint8Array {\n    return this._arr;\n  }\n\n  public toHex(): string {\n    return toHexString(this._arr).toUpperCase();\n  }\n\n  public toText(): string {\n    const checksumArrayBuf = new ArrayBuffer(4);\n    const view = new DataView(checksumArrayBuf);\n    view.setUint32(0, getCrc32(this._arr));\n    const checksum = new Uint8Array(checksumArrayBuf);\n\n    const bytes = Uint8Array.from(this._arr);\n    const array = new Uint8Array([...checksum, ...bytes]);\n\n    const result = encode(array);\n    const matches = result.match(/.{1,5}/g);\n    if (!matches) {\n      // This should only happen if there's no character, which is unreachable.\n      throw new Error();\n    }\n    return matches.join('-');\n  }\n\n  public toString(): string {\n    return this.toText();\n  }\n\n  /**\n   * Serializes to JSON\n   * @returns {JsonnablePrincipal} a JSON object with a single key, {@link JSON_KEY_PRINCIPAL}, whose value is the principal as a string\n   */\n  public toJSON(): JsonnablePrincipal {\n    return { [JSON_KEY_PRINCIPAL]: this.toText() };\n  }\n\n  /**\n   * Utility method taking a Principal to compare against. Used for determining canister ranges in certificate verification\n   * @param {Principal} other - a {@link Principal} to compare\n   * @returns {'lt' | 'eq' | 'gt'} `'lt' | 'eq' | 'gt'` a string, representing less than, equal to, or greater than\n   */\n  public compareTo(other: Principal): 'lt' | 'eq' | 'gt' {\n    for (let i = 0; i < Math.min(this._arr.length, other._arr.length); i++) {\n      if (this._arr[i] < other._arr[i]) return 'lt';\n      else if (this._arr[i] > other._arr[i]) return 'gt';\n    }\n    // Here, at least one principal is a prefix of the other principal (they could be the same)\n    if (this._arr.length < other._arr.length) return 'lt';\n    if (this._arr.length > other._arr.length) return 'gt';\n    return 'eq';\n  }\n\n  /**\n   * Utility method checking whether a provided Principal is less than or equal to the current one using the {@link Principal.compareTo} method\n   * @param other a {@link Principal} to compare\n   * @returns {boolean} boolean\n   */\n  public ltEq(other: Principal): boolean {\n    const cmp = this.compareTo(other);\n    return cmp == 'lt' || cmp == 'eq';\n  }\n\n  /**\n   * Utility method checking whether a provided Principal is greater than or equal to the current one using the {@link Principal.compareTo} method\n   * @param other a {@link Principal} to compare\n   * @returns {boolean} boolean\n   */\n  public gtEq(other: Principal): boolean {\n    const cmp = this.compareTo(other);\n    return cmp == 'gt' || cmp == 'eq';\n  }\n}\n", "// candidDecoder.ts\nimport { Principal } from \"@dfinity/principal\";\n/**\n * Custom error class for Candid decoding issues.\n * Includes the byte index where the error occurred.\n */\nexport class CandidError extends Error {\n    constructor(message, index) {\n        super(message);\n        this.index = index;\n        this.name = \"CandidError\";\n    }\n}\n/**\n * A utility class for reading bytes from a Uint8Array buffer.\n * Keeps track of the current reading offset and provides various read methods.\n */\nclass ByteReader {\n    constructor(buffer) {\n        this.buffer = buffer;\n        this.offset = 0;\n        this.dataView = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n    }\n    /**\n     * Checks if there are more bytes to read in the buffer.\n     * @returns True if more bytes are available, false otherwise.\n     */\n    hasMore() {\n        return this.offset < this.buffer.length;\n    }\n    /**\n     * Reads a single byte from the current offset and advances the offset.\n     * @returns The byte read.\n     * @throws CandidError if attempting to read beyond the buffer end.\n     */\n    readByte() {\n        if (!this.hasMore()) {\n            throw new CandidError(\"Unexpected end of buffer when reading a single byte.\", this.offset);\n        }\n        const byte = this.buffer[this.offset];\n        this.offset++;\n        return byte;\n    }\n    /**\n     * Reads a specified number of bytes from the current offset and advances the offset.\n     * @param length The number of bytes to read.\n     * @returns A Uint8Array containing the read bytes.\n     * @throws CandidError if not enough bytes are available to read the specified length.\n     */\n    readBytes(length) {\n        if (this.offset + length > this.buffer.length) {\n            throw new CandidError(`Not enough bytes to read. Expected ${length}, but only ${this.buffer.length - this.offset} available.`, this.offset);\n        }\n        const bytes = this.buffer.slice(this.offset, this.offset + length);\n        this.offset += length;\n        return bytes;\n    }\n    /**\n     * Reads a LEB128 encoded unsigned integer (used for 'nat' and lengths).\n     * @returns The decoded unsigned integer as a BigInt.\n     */\n    readULEB128() {\n        let result = 0n;\n        let shift = 0n;\n        let byte;\n        do {\n            byte = this.readByte();\n            result |= (BigInt(byte) & 0x7fn) << shift; // Take lower 7 bits and append\n            shift += 7n;\n        } while ((byte & 0x80) !== 0); // Continue if MSB is set\n        return result;\n    }\n    /**\n     * Reads a LEB128 encoded signed integer (used for 'int' and type codes).\n     * @returns The decoded signed integer as a BigInt.\n     */\n    readSLEB128() {\n        let result = 0n;\n        let shift = 0n;\n        let byte;\n        do {\n            byte = this.readByte();\n            result |= (BigInt(byte) & 0x7fn) << shift;\n            shift += 7n;\n        } while ((byte & 0x80) !== 0);\n        // Sign extension: If the last byte's MSB (of the 7 bits) was set (0x40),\n        // and we haven't filled up a 64-bit BigInt yet, extend the sign.\n        if ((byte & 0x40) !== 0 && shift < 64n) {\n            // Check for MSB of last 7-bit chunk\n            result |= ~0n << shift; // Extend sign to fill higher bits\n        }\n        return result;\n    }\n    /**\n     * Reads a UTF-8 string of a specified length.\n     * @param length The length of the string in bytes.\n     * @returns The decoded string.\n     * @throws CandidError if not enough bytes are available.\n     */\n    readUtf8String(length) {\n        const bytes = this.readBytes(length);\n        const decoder = new TextDecoder(\"utf-8\", { fatal: true });\n        return decoder.decode(bytes);\n    }\n    /**\n     * Reads a fixed-size little-endian integer (e.g., nat16, int32, nat64).\n     * @param byteLength The number of bytes to read (1, 2, 4, or 8).\n     * @param signed Whether the number should be interpreted as signed.\n     * @returns The decoded integer as a BigInt (important for 64-bit numbers).\n     * @throws CandidError if not enough bytes are available.\n     */\n    readLittleEndian(byteLength, signed = false) {\n        if (this.offset + byteLength > this.buffer.length) {\n            throw new CandidError(`Not enough bytes for ${byteLength}-byte number (little-endian)`, this.offset);\n        }\n        let value = 0n;\n        for (let i = 0; i < byteLength; i++) {\n            value |= BigInt(this.buffer[this.offset + i]) << BigInt(8 * i);\n        }\n        this.offset += byteLength;\n        // Sign extension for fixed-width signed integers\n        if (signed) {\n            const msbMask = 1n << BigInt(byteLength * 8 - 1); // Mask for the most significant bit\n            if ((value & msbMask) !== 0n) {\n                // If MSB is set, it's a negative number\n                value = value - (1n << BigInt(byteLength * 8)); // Subtract 2^(numBits) to get negative value\n            }\n        }\n        return value;\n    }\n    /**\n     * Reads a floating-point number (Float32 or Float64).\n     * @param byteLength The number of bytes to read (4 for Float32, 8 for Float64).\n     * @returns The decoded floating-point number.\n     * @throws CandidError if not enough bytes are available.\n     */\n    readFloat(byteLength) {\n        if (this.offset + byteLength > this.buffer.length) {\n            throw new CandidError(`Not enough bytes for Float${byteLength * 8}`, this.offset);\n        }\n        // Use DataView directly for efficient float reading\n        let value;\n        if (byteLength === 4) {\n            value = this.dataView.getFloat32(this.offset, true); // true for little-endian\n        }\n        else {\n            value = this.dataView.getFloat64(this.offset, true); // true for little-endian\n        }\n        this.offset += byteLength;\n        return value;\n    }\n    /**\n     * Gets the current reading offset (byte index) in the buffer.\n     * @returns The current offset.\n     */\n    getCurrentOffset() {\n        return this.offset;\n    }\n}\n/**\n * Enum representing Candid primitive type codes (negative values).\n * These are used in the Candid binary format to denote type definitions.\n */\nvar CandidTypeTag;\n(function (CandidTypeTag) {\n    CandidTypeTag[CandidTypeTag[\"Null\"] = -1] = \"Null\";\n    CandidTypeTag[CandidTypeTag[\"Bool\"] = -2] = \"Bool\";\n    CandidTypeTag[CandidTypeTag[\"Nat\"] = -3] = \"Nat\";\n    CandidTypeTag[CandidTypeTag[\"Int\"] = -4] = \"Int\";\n    CandidTypeTag[CandidTypeTag[\"Nat8\"] = -5] = \"Nat8\";\n    CandidTypeTag[CandidTypeTag[\"Nat16\"] = -6] = \"Nat16\";\n    CandidTypeTag[CandidTypeTag[\"Nat32\"] = -7] = \"Nat32\";\n    CandidTypeTag[CandidTypeTag[\"Nat64\"] = -8] = \"Nat64\";\n    CandidTypeTag[CandidTypeTag[\"Int8\"] = -9] = \"Int8\";\n    CandidTypeTag[CandidTypeTag[\"Int16\"] = -10] = \"Int16\";\n    CandidTypeTag[CandidTypeTag[\"Int32\"] = -11] = \"Int32\";\n    CandidTypeTag[CandidTypeTag[\"Int64\"] = -12] = \"Int64\";\n    CandidTypeTag[CandidTypeTag[\"Float32\"] = -13] = \"Float32\";\n    CandidTypeTag[CandidTypeTag[\"Float64\"] = -14] = \"Float64\";\n    CandidTypeTag[CandidTypeTag[\"Text\"] = -15] = \"Text\";\n    CandidTypeTag[CandidTypeTag[\"Reserved\"] = -16] = \"Reserved\";\n    CandidTypeTag[CandidTypeTag[\"Empty\"] = -17] = \"Empty\";\n    // Composite Type Definition Codes (these appear in the type table)\n    CandidTypeTag[CandidTypeTag[\"Opt\"] = -18] = \"Opt\";\n    CandidTypeTag[CandidTypeTag[\"Vec\"] = -19] = \"Vec\";\n    CandidTypeTag[CandidTypeTag[\"Record\"] = -20] = \"Record\";\n    CandidTypeTag[CandidTypeTag[\"Variant\"] = -21] = \"Variant\";\n    CandidTypeTag[CandidTypeTag[\"Func\"] = -22] = \"Func\";\n    CandidTypeTag[CandidTypeTag[\"Service\"] = -23] = \"Service\";\n    CandidTypeTag[CandidTypeTag[\"Principal\"] = -24] = \"Principal\";\n})(CandidTypeTag || (CandidTypeTag = {}));\n/**\n * Creates a lookup map from an array of string field names.\n * Each string name is converted to its hash and used as the key.\n * @param names An array of string field names.\n * @returns A Record where keys are hashes and values are the original field names.\n */\nexport function createNameLookup(names) {\n    const map = {};\n    for (const name of names) {\n        const hash = fieldHash(name);\n        if (map[hash]) {\n            map[hash] += `|${name}`;\n            console.warn(\"Hash collision or duplicate between field names:\", map[hash]);\n        }\n        else {\n            map[hash] = name;\n        }\n    }\n    return map;\n}\nfunction fieldHash(name) {\n    const utf8 = new TextEncoder().encode(name);\n    const p = 223; // The prime base for the polynomial hash\n    const mod = 2 ** 32; // The modulus, ensuring the hash remains a 32-bit unsigned integer\n    let hash = 0; // Initialize the hash accumulator\n    // Iterate over each byte in the UTF-8 encoded string\n    for (let i = 0; i < utf8.length; i++) {\n        const c = utf8[i]; // Get the current byte value\n        // Apply the polynomial hash formula: (previous_hash * base + current_byte) % modulus\n        hash = (hash * p + c) % mod;\n    }\n    // The hash is already within the 32-bit unsigned range due to the modulo operation\n    return hash;\n}\n/**\n * Main function to decode Candid binary data.\n * It parses the Candid header (magic, type table, argument types)\n * and then decodes the actual values.\n *\n * @param buffer The Uint8Array containing the Candid binary data.\n * @param fieldNamesMap Optional map of field IDs (bigint) to human-readable names (string).\n * Used to resolve numeric field IDs in records/variants to actual names.\n * @returns A DecodeResult object containing the decoded data, or error details.\n */\nexport function decodeCandid(buffer, fieldNamesMap) {\n    const reader = new ByteReader(buffer);\n    let decodedData = null;\n    let errorMsg = null;\n    let errorIdx = null;\n    // Stores parsed type definitions, accessible by their index (0-based)\n    const typeTable = [];\n    try {\n        // --- 1. Read Magic bytes \"DIDL\" (0x44 0x49 0x44 0x4C) ---\n        const magic = reader.readBytes(4);\n        if (magic[0] !== 0x44 ||\n            magic[1] !== 0x49 ||\n            magic[2] !== 0x44 ||\n            magic[3] !== 0x4c) {\n            throw new CandidError(\"Invalid Candid magic bytes. Expected 'DIDL'.\", 0);\n        }\n        // --- 2. Parse Type Table ---\n        // This section defines all custom (composite) types used in the message.\n        const numberOfTypes = reader.readULEB128();\n        for (let i = 0; i < numberOfTypes; i++) {\n            const currentParseOffset = reader.getCurrentOffset(); // Keep track for error reporting\n            const typeCode = reader.readSLEB128(); // Reads the type tag for the current type definition\n            let typeDef;\n            switch (Number(typeCode)) {\n                case CandidTypeTag.Opt:\n                    const optInnerTypeIdx = reader.readSLEB128();\n                    typeDef = {\n                        tag: CandidTypeTag.Opt,\n                        innerTypeIdx: optInnerTypeIdx,\n                    };\n                    break;\n                case CandidTypeTag.Vec:\n                    const vecElementTypeIdx = reader.readSLEB128();\n                    typeDef = {\n                        tag: CandidTypeTag.Vec,\n                        elementTypeIdx: vecElementTypeIdx,\n                    };\n                    break;\n                case CandidTypeTag.Record:\n                    const numRecordFields = reader.readULEB128();\n                    const recordFields = [];\n                    for (let j = 0; j < numRecordFields; j++) {\n                        const id = reader.readULEB128(); // Field ID (hash of field name)\n                        const typeIdx = reader.readSLEB128(); // Type index of the field's value\n                        recordFields.push({ id, typeIdx });\n                    }\n                    // Candid spec requires record fields to be sorted by their ID for canonical representation.\n                    recordFields.sort((a, b) => Number(a.id - b.id));\n                    typeDef = {\n                        tag: CandidTypeTag.Record,\n                        fields: recordFields,\n                    };\n                    break;\n                case CandidTypeTag.Variant:\n                    const numVariantOptions = reader.readULEB128();\n                    const variantOptions = [];\n                    for (let j = 0; j < numVariantOptions; j++) {\n                        const id = reader.readULEB128(); // Option ID (hash of option name)\n                        const typeIdx = reader.readSLEB128(); // Type index of the option's value\n                        variantOptions.push({ id, typeIdx });\n                    }\n                    // Candid spec requires variant options to be sorted by their ID for canonical representation.\n                    variantOptions.sort((a, b) => Number(a.id - b.id));\n                    typeDef = {\n                        tag: CandidTypeTag.Variant,\n                        options: variantOptions,\n                    };\n                    break;\n                case CandidTypeTag.Func:\n                    const numFuncArgs = reader.readULEB128();\n                    const funcArgs = [];\n                    for (let j = 0; j < numFuncArgs; j++)\n                        funcArgs.push(reader.readSLEB128());\n                    const numFuncRets = reader.readULEB128();\n                    const funcRets = [];\n                    for (let j = 0; j < numFuncRets; j++)\n                        funcRets.push(reader.readSLEB128());\n                    const numFuncModes = reader.readULEB128();\n                    const funcModes = [];\n                    for (let j = 0; j < numFuncModes; j++) {\n                        const modeByte = reader.readByte();\n                        // 1: oneway, 2: query\n                        if (modeByte === 1)\n                            funcModes.push(\"oneway\");\n                        else if (modeByte === 2)\n                            funcModes.push(\"query\");\n                        else\n                            throw new CandidError(`Invalid function mode byte: ${modeByte}. Expected 1 or 2.`, reader.getCurrentOffset() - 1);\n                    }\n                    typeDef = {\n                        tag: CandidTypeTag.Func,\n                        argTypeIdxs: funcArgs,\n                        retTypeIdxs: funcRets,\n                        modes: funcModes,\n                    };\n                    break;\n                case CandidTypeTag.Service:\n                    const numServiceMethods = reader.readULEB128();\n                    const serviceMethods = [];\n                    for (let j = 0; j < numServiceMethods; j++) {\n                        const nameLen = Number(reader.readULEB128());\n                        const name = reader.readUtf8String(nameLen);\n                        const funcTypeIdx = reader.readSLEB128(); // Points to a FuncTypeDefinition in the type table\n                        serviceMethods.push({ name, funcTypeIdx });\n                    }\n                    typeDef = {\n                        tag: CandidTypeTag.Service,\n                        methods: serviceMethods,\n                    };\n                    break;\n                default:\n                    throw new CandidError(`Unexpected type code (${typeCode}) in type table definition at index ${i}.`, currentParseOffset);\n            }\n            typeTable.push(typeDef);\n        }\n        // --- 3. Parse Message Argument Types ---\n        const numberOfArgTypes = reader.readULEB128();\n        const argTypeIndices = [];\n        for (let i = 0; i < numberOfArgTypes; i++) {\n            const typeIdx = reader.readSLEB128();\n            const typeCode = Number(typeIdx);\n            // Reference types cannot be used directly as arguments.\n            if (typeCode === CandidTypeTag.Service ||\n                typeCode === CandidTypeTag.Func) {\n                throw new CandidError(`Reference type ${typeCode} cannot be used directly as an argument. It must be in the type table.`, reader.getCurrentOffset() - 1);\n            }\n            argTypeIndices.push(typeIdx);\n        }\n        // --- 4. Decode Values ---\n        const decodedValues = [];\n        for (let i = 0; i < argTypeIndices.length; i++) {\n            const typeOrIndex = argTypeIndices[i];\n            decodedValues.push(decodeValue(reader, typeOrIndex, typeTable, fieldNamesMap));\n        }\n        // --- 5. Check for trailing bytes ---\n        if (reader.hasMore()) {\n            throw new CandidError(\"Trailing bytes found after decoding all expected values.\", reader.getCurrentOffset());\n        }\n        decodedData = decodedValues;\n        return { ok: decodedData };\n    }\n    catch (e) {\n        // Centralized error handling\n        if (e instanceof CandidError) {\n            errorMsg = e.message;\n            errorIdx = e.index;\n        }\n        else if (e instanceof Error) {\n            errorMsg = `An unexpected JavaScript error occurred: ${e.message}`;\n            errorIdx = reader.getCurrentOffset(); // Best guess for location\n        }\n        else {\n            errorMsg = \"An unknown error occurred during decoding.\";\n            errorIdx = reader.getCurrentOffset();\n        }\n        return {\n            error: {\n                msg: errorMsg,\n                index: errorIdx,\n                data: decodedData !== null ? decodedData : undefined,\n            },\n        };\n    }\n}\n/**\n * Helper function to decode a principal value from the byte stream.\n * @param reader The ByteReader instance.\n * @returns The decoded Principal object.\n */\nfunction decodePrincipalValue(reader) {\n    const principalTag = reader.readByte();\n    if (principalTag !== 0x01) {\n        throw new CandidError(`Unsupported principal tag: ${principalTag}. Expected 1.`, reader.getCurrentOffset() - 1);\n    }\n    const principalLen = Number(reader.readULEB128());\n    if (principalLen > 29) {\n        throw new CandidError(`Invalid principal length: ${principalLen}. Must be at most 29 bytes.`, reader.getCurrentOffset() - 1);\n    }\n    const bytes = reader.readBytes(principalLen);\n    return Principal.fromUint8Array(bytes);\n}\n/**\n * Recursively decodes a Candid value based on its type tag or type table index.\n */\nfunction decodeValue(reader, typeOrIndex, typeTable, fieldNamesMap) {\n    let currentTypeTag;\n    let typeDef;\n    if (typeOrIndex >= 0) {\n        if (typeOrIndex >= typeTable.length) {\n            throw new CandidError(`Type index ${typeOrIndex} is out of bounds for type table of size ${typeTable.length}.`, reader.getCurrentOffset());\n        }\n        typeDef = typeTable[Number(typeOrIndex)];\n        currentTypeTag = Number(typeDef.tag);\n    }\n    else {\n        currentTypeTag = Number(typeOrIndex);\n    }\n    switch (currentTypeTag) {\n        case CandidTypeTag.Null:\n            return null;\n        case CandidTypeTag.Bool:\n            const boolByte = reader.readByte();\n            if (boolByte === 0)\n                return false;\n            if (boolByte === 1)\n                return true;\n            throw new CandidError(`Invalid boolean value: ${boolByte}. Expected 0 (false) or 1 (true).`, reader.getCurrentOffset() - 1);\n        case CandidTypeTag.Nat:\n            return reader.readULEB128();\n        case CandidTypeTag.Int:\n            return reader.readSLEB128();\n        case CandidTypeTag.Nat8:\n            return reader.readByte();\n        case CandidTypeTag.Nat16:\n            return Number(reader.readLittleEndian(2, false));\n        case CandidTypeTag.Nat32:\n            return Number(reader.readLittleEndian(4, false));\n        case CandidTypeTag.Nat64:\n            return reader.readLittleEndian(8, false);\n        case CandidTypeTag.Int8:\n            return Number(reader.readLittleEndian(1, true));\n        case CandidTypeTag.Int16:\n            return Number(reader.readLittleEndian(2, true));\n        case CandidTypeTag.Int32:\n            return Number(reader.readLittleEndian(4, true));\n        case CandidTypeTag.Int64:\n            return reader.readLittleEndian(8, true);\n        case CandidTypeTag.Float32:\n            return reader.readFloat(4);\n        case CandidTypeTag.Float64:\n            return reader.readFloat(8);\n        case CandidTypeTag.Text:\n            const textLength = Number(reader.readULEB128());\n            return reader.readUtf8String(textLength);\n        case CandidTypeTag.Reserved:\n            return null;\n        case CandidTypeTag.Empty:\n            throw new CandidError(\"Attempted to decode 'empty' type as a value. This type has no encoded form.\", reader.getCurrentOffset());\n        case CandidTypeTag.Principal:\n        case CandidTypeTag.Service:\n            return decodePrincipalValue(reader);\n        case CandidTypeTag.Opt: {\n            const optDef = typeDef;\n            const presentByte = reader.readByte();\n            if (presentByte === 0) {\n                return [];\n            }\n            else if (presentByte === 1) {\n                return [\n                    decodeValue(reader, optDef.innerTypeIdx, typeTable, fieldNamesMap),\n                ];\n            }\n            else {\n                throw new CandidError(`Invalid option tag: ${presentByte}. Expected 0 or 1.`, reader.getCurrentOffset() - 1);\n            }\n        }\n        case CandidTypeTag.Vec: {\n            const vecDef = typeDef;\n            const vectorLength = Number(reader.readULEB128());\n            const elements = [];\n            for (let i = 0; i < vectorLength; i++) {\n                elements.push(decodeValue(reader, vecDef.elementTypeIdx, typeTable, fieldNamesMap));\n            }\n            return elements;\n        }\n        case CandidTypeTag.Record: {\n            const recordDef = typeDef;\n            const record = {};\n            for (const field of recordDef.fields) {\n                const fieldKey = fieldNamesMap?.[Number(field.id)] || `_${field.id.toString()}`;\n                record[fieldKey] = decodeValue(reader, field.typeIdx, typeTable, fieldNamesMap);\n            }\n            return record;\n        }\n        case CandidTypeTag.Variant: {\n            const variantDef = typeDef;\n            const variantIdx = Number(reader.readULEB128());\n            if (variantIdx >= variantDef.options.length) {\n                throw new CandidError(`Variant option index ${variantIdx} out of bounds. Variant has ${variantDef.options.length} options.`, reader.getCurrentOffset() - 1);\n            }\n            const selectedOption = variantDef.options[variantIdx];\n            const variantValue = decodeValue(reader, selectedOption.typeIdx, typeTable, fieldNamesMap);\n            const optionKey = fieldNamesMap?.[Number(selectedOption.id)] ||\n                `_${selectedOption.id.toString()}`;\n            return { [optionKey]: variantValue };\n        }\n        case CandidTypeTag.Func: {\n            const funcTag = reader.readByte();\n            if (funcTag !== 0x01) {\n                throw new CandidError(`Unsupported function tag: ${funcTag}. Expected 1 for reference type.`, reader.getCurrentOffset() - 1);\n            }\n            const principal = decodePrincipalValue(reader);\n            const funcMethodNameLen = Number(reader.readULEB128());\n            const funcMethodName = reader.readUtf8String(funcMethodNameLen);\n            return [principal, funcMethodName];\n        }\n        default:\n            throw new CandidError(`Unsupported or unknown Candid type tag: ${currentTypeTag} (resolved from index ${typeOrIndex}).`, reader.getCurrentOffset());\n    }\n}\n", "// Generated using generateFieldNames.js.\n// Do not edit manually!\nimport { createNameLookup } from \"./candidDecoder.js\";\nconst candidFieldNames = [\n    \"Aborted\",\n    \"AcceptedDeposit\",\n    \"AcceptedErc20Deposit\",\n    \"AcceptedErc20WithdrawalRequest\",\n    \"AcceptedEthWithdrawalRequest\",\n    \"AccessDenied\",\n    \"AddErc20Arg\",\n    \"AddGenericNervousSystemFunction\",\n    \"AddHotKey\",\n    \"AddNeuronPermission\",\n    \"AddNeuronPermissions\",\n    \"AddOrRemoveNodeProvider\",\n    \"AddedCkErc20Token\",\n    \"AddressAdded\",\n    \"AddressRemoved\",\n    \"AdvanceSnsTargetVersion\",\n    \"AllowanceChanged\",\n    \"AllowedPrincipals\",\n    \"AmountTooLow\",\n    \"AnonymousPrincipalNotAllowed\",\n    \"Approve\",\n    \"ApproveGenesisKyc\",\n    \"Array\",\n    \"AuthenticationFailed\",\n    \"BadBurn\",\n    \"BadFee\",\n    \"BadFirstBlockIndex\",\n    \"BehindTargetVersion\",\n    \"Blob\",\n    \"BlobContent\",\n    \"Burn\",\n    \"ByRecipient\",\n    \"BySenderAccount\",\n    \"ByWithdrawalId\",\n    \"Callback\",\n    \"Called\",\n    \"Canister\",\n    \"CanisterCalled\",\n    \"CanisterCreated\",\n    \"CanisterError\",\n    \"ChangeAutoStakeMaturity\",\n    \"CheckCaptcha\",\n    \"Checked\",\n    \"CkErc20\",\n    \"CkErc20LedgerError\",\n    \"CkEth\",\n    \"CkEthLedgerError\",\n    \"ClaimOrRefresh\",\n    \"ClaimOrRefreshNeuron\",\n    \"Clear\",\n    \"Committed\",\n    \"CommunityFund\",\n    \"Configure\",\n    \"Confirmed\",\n    \"ConsentMessageUnavailable\",\n    \"CreateAsset\",\n    \"CreateServiceNervousSystem\",\n    \"Created\",\n    \"CreatedInFuture\",\n    \"CreatedTransaction\",\n    \"CryptoBaseAssetNotFound\",\n    \"CryptoQuoteAssetNotFound\",\n    \"CyclesReceived\",\n    \"CyclesSent\",\n    \"DeleteAsset\",\n    \"DeployedSns\",\n    \"DepositsRestrictedTo\",\n    \"DeregisterDappCanisters\",\n    \"Direct\",\n    \"Disburse\",\n    \"DisburseMaturity\",\n    \"DisburseToNeuron\",\n    \"DissolveDelaySeconds\",\n    \"Duplicate\",\n    \"Dynamic\",\n    \"Err\",\n    \"Error\",\n    \"ExchangeRate\",\n    \"ExecuteGenericNervousSystemFunction\",\n    \"ExecuteNnsFunction\",\n    \"Expired\",\n    \"ExternalFailure\",\n    \"Failed\",\n    \"FailedErc20WithdrawalRequest\",\n    \"FailedToAcceptCycles\",\n    \"Filter\",\n    \"FinalizeDisburseMaturity\",\n    \"FinalizedTransaction\",\n    \"Follow\",\n    \"ForexAssetsNotFound\",\n    \"ForexBaseAssetNotFound\",\n    \"ForexInvalidTimestamp\",\n    \"ForexQuoteAssetNotFound\",\n    \"FractionalDeveloperVotingPower\",\n    \"GenericDisplayMessage\",\n    \"GenericError\",\n    \"GenericNervousSystemFunction\",\n    \"Hash\",\n    \"Image\",\n    \"IncidentIdNotFound\",\n    \"IncidentIds\",\n    \"InconsistentRatesReceived\",\n    \"IncreaseDissolveDelay\",\n    \"Init\",\n    \"InitArg\",\n    \"InstallCode\",\n    \"Installed\",\n    \"InsufficientAllowance\",\n    \"InsufficientFunds\",\n    \"InsufficientPayment\",\n    \"Int\",\n    \"Internal\",\n    \"InternalCanisterError\",\n    \"InvalidAuthnMethod\",\n    \"InvalidDeposit\",\n    \"InvalidIdAlias\",\n    \"InvalidInputConfig\",\n    \"InvalidMetadata\",\n    \"InvalidState\",\n    \"InvalidTransaction\",\n    \"InvalidTransactionId\",\n    \"InvalidUuidFormat\",\n    \"JoinCommunityFund\",\n    \"LastNeuronId\",\n    \"LeaveCommunityFund\",\n    \"LineDisplay\",\n    \"LineDisplayMessage\",\n    \"MakeProposal\",\n    \"MalformedAddress\",\n    \"ManageDappCanisterSettings\",\n    \"ManageLedgerParameters\",\n    \"ManageNervousSystemParameters\",\n    \"ManageNetworkEconomics\",\n    \"ManageNeuron\",\n    \"ManageSnsMetadata\",\n    \"Map\",\n    \"Memo\",\n    \"MemoAndController\",\n    \"Merge\",\n    \"MergeMaturity\",\n    \"MinConfirmations\",\n    \"Mint\",\n    \"MintSnsTokens\",\n    \"Minted\",\n    \"MintedCkErc20\",\n    \"MintedCkEth\",\n    \"Motion\",\n    \"NameError\",\n    \"Nat\",\n    \"Nat16Content\",\n    \"Nat32Content\",\n    \"Nat64\",\n    \"Nat64Content\",\n    \"Nat8Content\",\n    \"NatContent\",\n    \"NativeNervousSystemFunction\",\n    \"Neuron\",\n    \"NeuronId\",\n    \"NeuronIdOrSubaccount\",\n    \"NeuronsFund\",\n    \"NoNewUtxos\",\n    \"NoSuchCredentials\",\n    \"Node\",\n    \"NotEnoughCycles\",\n    \"Number\",\n    \"Ok\",\n    \"OpenSnsTokenSwap\",\n    \"Other\",\n    \"Page\",\n    \"Pending\",\n    \"PendingReimbursement\",\n    \"Plausible\",\n    \"PolicyViolation\",\n    \"Proposal\",\n    \"PubKey\",\n    \"QuarantinedDeposit\",\n    \"QuarantinedReimbursement\",\n    \"RateLimited\",\n    \"RecipientAddressBlocked\",\n    \"Redirect\",\n    \"RefreshVotingPower\",\n    \"Refunded\",\n    \"RegisterDappCanisters\",\n    \"RegisterKnownNeuron\",\n    \"RegisterVote\",\n    \"Reimbursed\",\n    \"ReimbursedErc20Withdrawal\",\n    \"ReimbursedEthWithdrawal\",\n    \"RemoveGenericNervousSystemFunction\",\n    \"RemoveHotKey\",\n    \"RemoveNeuronPermission\",\n    \"RemoveNeuronPermissions\",\n    \"ReplacedTransaction\",\n    \"ResponseTooLarge\",\n    \"RestrictedTo\",\n    \"Retriable\",\n    \"RewardNodeProvider\",\n    \"RewardNodeProviders\",\n    \"RewardToAccount\",\n    \"RewardToNeuron\",\n    \"RuleIdNotFound\",\n    \"RuleIds\",\n    \"Send\",\n    \"Sending\",\n    \"Set\",\n    \"SetApprovalForAll\",\n    \"SetAsset\",\n    \"SetAssetContent\",\n    \"SetAssetProperties\",\n    \"SetDefaultFollowees\",\n    \"SetDissolveTimestamp\",\n    \"SetFollowing\",\n    \"SetSnsTokenSwapOpenTimeWindow\",\n    \"SetTopicsForCustomProposals\",\n    \"SetVisibility\",\n    \"SignatureNotFound\",\n    \"SignedTransaction\",\n    \"SkippedBlock\",\n    \"Spawn\",\n    \"Split\",\n    \"StablecoinRateNotFound\",\n    \"StablecoinRateTooFewRates\",\n    \"StablecoinRateZeroRate\",\n    \"StakeMaturity\",\n    \"StartDissolving\",\n    \"State\",\n    \"Static\",\n    \"StopDissolving\",\n    \"StopOrStartCanister\",\n    \"StorageError\",\n    \"StorageSpaceExceeded\",\n    \"Subaccount\",\n    \"Submitted\",\n    \"Subnet\",\n    \"Success\",\n    \"SyncCommand\",\n    \"SyncedDepositWithSubaccountToBlock\",\n    \"SyncedErc20ToBlock\",\n    \"SyncedToBlock\",\n    \"Tainted\",\n    \"TaintedDestination\",\n    \"TargetVersionReset\",\n    \"TargetVersionSet\",\n    \"TemporarilyUnavailable\",\n    \"Text\",\n    \"TextContent\",\n    \"Timeout\",\n    \"ToAdd\",\n    \"ToRemove\",\n    \"TokenNotSupported\",\n    \"TransactionTooOld\",\n    \"Transfer\",\n    \"TransferFrom\",\n    \"TransferSnsTreasuryFunds\",\n    \"TransientInternalError\",\n    \"Trap\",\n    \"TxCreatedInFuture\",\n    \"TxDuplicate\",\n    \"TxFinalized\",\n    \"TxIdBin\",\n    \"TxIdStr\",\n    \"TxSent\",\n    \"TxTooOld\",\n    \"Unauthorized\",\n    \"UnauthorizedSubject\",\n    \"UnexpectedCall\",\n    \"UnexpectedError\",\n    \"Unknown\",\n    \"UnknownSubject\",\n    \"UnsetAsset\",\n    \"UnsetAssetContent\",\n    \"Unspecified\",\n    \"UnsupportedCanisterCall\",\n    \"UnsupportedCredentialSpec\",\n    \"UnsupportedOrigin\",\n    \"UpdateCanisterSettings\",\n    \"Upgrade\",\n    \"UpgradeArg\",\n    \"UpgradeOutcome\",\n    \"UpgradeSnsControlledCanister\",\n    \"UpgradeSnsToNextVersion\",\n    \"UpgradeSnsToNextVersionProposal\",\n    \"UpgradeStarted\",\n    \"UpgradeStepsRefreshed\",\n    \"UpgradeStepsReset\",\n    \"ValueTooSmall\",\n    \"WalletDeployed\",\n    \"WebAuthn\",\n    \"WhenDissolvedTimestampSeconds\",\n    \"WillReimburse\",\n    \"WrongCode\",\n    \"WrongSolution\",\n    \"accept_encodings\",\n    \"accepted_retrieve_btc_request\",\n    \"access_controls_enabled\",\n    \"access_list\",\n    \"access_point\",\n    \"access_points\",\n    \"account\",\n    \"account_balance\",\n    \"account_balance_dfx\",\n    \"account_creation_paused\",\n    \"account_identifier\",\n    \"account_identifier_to_disburse_to\",\n    \"account_to_disburse_to\",\n    \"accounts\",\n    \"accounts_overflow_trim_quantity\",\n    \"acknowledge_entries\",\n    \"action\",\n    \"action_auxiliary\",\n    \"active_since\",\n    \"actual_timestamp_seconds\",\n    \"actual_update_mock_query_remote_candid_update\",\n    \"add\",\n    \"addAllowedPrincipal\",\n    \"addMod\",\n    \"addToEmailQueue\",\n    \"addUser\",\n    \"add_address\",\n    \"add_adult\",\n    \"add_api_boundary_nodes\",\n    \"add_ckerc20_token\",\n    \"add_config\",\n    \"add_controller\",\n    \"add_device\",\n    \"add_email_and_principal_for_create_account_validation\",\n    \"add_employee\",\n    \"add_firewall_rules\",\n    \"add_gradient\",\n    \"add_graduate\",\n    \"add_kp\",\n    \"add_logo\",\n    \"add_maturity\",\n    \"add_nns_canister\",\n    \"add_node\",\n    \"add_node_operator\",\n    \"add_nodes_to_subnet\",\n    \"add_note\",\n    \"add_openid_credential\",\n    \"add_or_remove_data_centers\",\n    \"add_tentative_device\",\n    \"add_transparency\",\n    \"add_user\",\n    \"add_wasm\",\n    \"added_in_version\",\n    \"added_principals\",\n    \"added_tentatively\",\n    \"additional_dissolve_delay_seconds\",\n    \"address\",\n    \"advance_target_version\",\n    \"age_seconds\",\n    \"aging_since_timestamp_seconds\",\n    \"airdrop_distribution\",\n    \"airdrop_neurons\",\n    \"alerts\",\n    \"alg\",\n    \"algorithm\",\n    \"alias\",\n    \"allocated_neurons_fund_participation_icp_e8s\",\n    \"allow_raw_access\",\n    \"allowance\",\n    \"allowance_e8s\",\n    \"allowed_principals\",\n    \"allowed_viewers\",\n    \"already_tried_to_auto_finalize\",\n    \"amInitializer\",\n    \"amount\",\n    \"amount_deducted_e8s\",\n    \"amount_disbursed_e8s\",\n    \"amount_e8s\",\n    \"amount_icp_e8s\",\n    \"amount_in_satoshi\",\n    \"amount_threshold\",\n    \"amount_to_be_disbursed_e8s\",\n    \"amount_transferred_e8s\",\n    \"analytics_config\",\n    \"analyzeCount\",\n    \"anchor\",\n    \"anchor_number\",\n    \"api_host\",\n    \"api_key\",\n    \"api_version\",\n    \"append_blocks\",\n    \"approve\",\n    \"approveDip721\",\n    \"approve_transaction\",\n    \"approves\",\n    \"archive_canister\",\n    \"archive_canister_ids\",\n    \"archive_compressed_wasm_hash\",\n    \"archive_config\",\n    \"archive_info\",\n    \"archive_options\",\n    \"archive_wasm_hash\",\n    \"archived_blocks\",\n    \"archived_transactions\",\n    \"archives\",\n    \"arg\",\n    \"arg_hash\",\n    \"arg_size\",\n    \"args\",\n    \"argument\",\n    \"arguments\",\n    \"assigned_user_number_range\",\n    \"at_timestamp\",\n    \"at_version\",\n    \"attached_cycles\",\n    \"aud\",\n    \"authenticated_principal_id\",\n    \"authnMethod\",\n    \"authn_method\",\n    \"authn_method_add\",\n    \"authn_method_confirm\",\n    \"authn_method_metadata_replace\",\n    \"authn_method_register\",\n    \"authn_method_registration\",\n    \"authn_method_registration_mode_enter\",\n    \"authn_method_registration_mode_exit\",\n    \"authn_method_remove\",\n    \"authn_method_replace\",\n    \"authn_method_security_settings_replace\",\n    \"authn_methods\",\n    \"authorize\",\n    \"authorized_principal\",\n    \"auto_finalize_swap_response\",\n    \"auto_stake_maturity\",\n    \"automatically_advance_target_version\",\n    \"aux\",\n    \"avg\",\n    \"bab\",\n    \"backend_canister_id\",\n    \"backup_canister_id\",\n    \"balance\",\n    \"balanceOfDip721\",\n    \"ballots\",\n    \"bar\",\n    \"base64_encoding\",\n    \"base_asset\",\n    \"base_asset_num_queried_sources\",\n    \"base_asset_num_received_rates\",\n    \"basic_entity\",\n    \"basis_points\",\n    \"batch_id\",\n    \"baz\",\n    \"before_proposal\",\n    \"binding\",\n    \"bip341\",\n    \"bitcoin_get_balance\",\n    \"bitcoin_get_balance_query\",\n    \"bitcoin_get_current_fee_percentiles\",\n    \"bitcoin_get_utxos\",\n    \"bitcoin_get_utxos_query\",\n    \"bitcoin_send_transaction\",\n    \"blob_len\",\n    \"block_hash\",\n    \"block_headers\",\n    \"block_height\",\n    \"block_index\",\n    \"block_number\",\n    \"block_range_end\",\n    \"block_range_start\",\n    \"blocks\",\n    \"body\",\n    \"bottom\",\n    \"branch\",\n    \"browser\",\n    \"btc_checker_principal\",\n    \"btc_network\",\n    \"buf_size\",\n    \"burn\",\n    \"burnDip721\",\n    \"burn_block_index\",\n    \"burn_in_block\",\n    \"buyer\",\n    \"buyer_principal\",\n    \"buyer_state\",\n    \"buyer_total_icp_e8s\",\n    \"buyers\",\n    \"buyers_total\",\n    \"by\",\n    \"c\",\n    \"cached_daily_maturity_modulation_basis_points\",\n    \"cached_neuron_stake_e8s\",\n    \"cached_upgrade_steps\",\n    \"call_errors\",\n    \"call_info\",\n    \"call_with_large_blob\",\n    \"callback\",\n    \"caller\",\n    \"calls\",\n    \"cancelOrder\",\n    \"canister\",\n    \"canisterCycles\",\n    \"canisterHeapMemorySize\",\n    \"canisterMemorySize\",\n    \"canister_controllers\",\n    \"canister_creation_cycles_cost\",\n    \"canister_deployment_chain\",\n    \"canister_http\",\n    \"canister_http_with_transform\",\n    \"canister_id\",\n    \"canister_id_ranges\",\n    \"canister_ids\",\n    \"canister_info\",\n    \"canister_log\",\n    \"canister_module_hash\",\n    \"canister_sandboxing\",\n    \"canister_sig_pk_der\",\n    \"canister_status\",\n    \"canister_to_subnet_rate\",\n    \"canister_type\",\n    \"canister_upgrade_arg\",\n    \"canister_version\",\n    \"canisters\",\n    \"canisters_number\",\n    \"canisters_per_batch\",\n    \"captcha_config\",\n    \"captcha_create\",\n    \"captcha_png_base64\",\n    \"captcha_trigger\",\n    \"cast_timestamp_seconds\",\n    \"category\",\n    \"cert\",\n    \"certificate\",\n    \"certificate_version\",\n    \"certified_tree\",\n    \"cf_neuron_count\",\n    \"cf_neurons\",\n    \"cf_participant_count\",\n    \"cf_participants\",\n    \"chain_code\",\n    \"chain_id\",\n    \"chain_key_config\",\n    \"chain_key_signing_disable\",\n    \"chain_key_signing_enable\",\n    \"chain_length\",\n    \"challenge_key\",\n    \"change\",\n    \"change_archive_options\",\n    \"change_availability\",\n    \"change_canister\",\n    \"change_canister_controllers\",\n    \"change_canister_controllers_result\",\n    \"change_fee_collector\",\n    \"change_nns_canister\",\n    \"change_output\",\n    \"change_state\",\n    \"change_subnet_membership\",\n    \"characters_per_line\",\n    \"chars\",\n    \"checkEmail\",\n    \"check_address\",\n    \"check_captcha\",\n    \"check_fee\",\n    \"check_mode\",\n    \"check_transaction\",\n    \"check_transaction_query\",\n    \"check_transaction_str\",\n    \"checked_utxo\",\n    \"checked_utxo_mint_unknown\",\n    \"checked_utxo_v2\",\n    \"checking_upgrade_lock\",\n    \"child_certificate\",\n    \"chip_id\",\n    \"chunk\",\n    \"chunk_hashes_list\",\n    \"chunk_ids\",\n    \"chunked_canister_wasm\",\n    \"ckerc20_block_index\",\n    \"ckerc20_ledger_burn_index\",\n    \"ckerc20_ledger_id\",\n    \"ckerc20_token_symbol\",\n    \"cketh_block_index\",\n    \"cketh_ledger_burn_index\",\n    \"cketh_ledger_id\",\n    \"claim\",\n    \"claim_gtc_neurons\",\n    \"claim_neuron_result\",\n    \"claim_neurons\",\n    \"claim_or_refresh_neuron_from_account\",\n    \"claim_swap_neurons\",\n    \"claim_swap_neurons_result\",\n    \"claimed\",\n    \"claimed_status\",\n    \"class\",\n    \"clean\",\n    \"clean_memory\",\n    \"clear\",\n    \"clear_chunk_store\",\n    \"clear_following_after_seconds\",\n    \"clear_provisional_whitelist\",\n    \"client_id\",\n    \"code\",\n    \"code_deployment\",\n    \"coefficient_intervals\",\n    \"cols\",\n    \"combine\",\n    \"command\",\n    \"comment\",\n    \"commit\",\n    \"commit_batch\",\n    \"commit_hash\",\n    \"commit_proposed_batch\",\n    \"committee_signing_pk\",\n    \"community_fund_investment_e8s\",\n    \"community_fund_total_maturity_e8s_equivalent\",\n    \"community_fund_total_staked_e8s\",\n    \"complete_canister_migration\",\n    \"compute_allocation\",\n    \"compute_evidence\",\n    \"compute_sum\",\n    \"config\",\n    \"configure\",\n    \"confirmation_code\",\n    \"confirmation_text\",\n    \"confirmations\",\n    \"confirmed_transaction\",\n    \"consent_message\",\n    \"content\",\n    \"content_encoding\",\n    \"content_sha256\",\n    \"content_type\",\n    \"contents\",\n    \"context\",\n    \"contract\",\n    \"contract_address\",\n    \"contribution_threshold_xdr\",\n    \"controller\",\n    \"controller_id\",\n    \"controller_principal_ids\",\n    \"controllers\",\n    \"controllers_change\",\n    \"controllers_number\",\n    \"copy_inactive_neurons_to_stable_memory_migration\",\n    \"count\",\n    \"count_anchors\",\n    \"count_buckets\",\n    \"count_icrc1_canisters\",\n    \"create\",\n    \"createGiftCard\",\n    \"createRegistration\",\n    \"create_access_point\",\n    \"create_account\",\n    \"create_and_validate_anonymous_http_with_ingress_expiry_time\",\n    \"create_array\",\n    \"create_asset\",\n    \"create_batch\",\n    \"create_canister\",\n    \"create_challenge\",\n    \"create_chunk\",\n    \"create_chunks\",\n    \"create_error\",\n    \"create_note\",\n    \"create_sns_neuron_recipes_result\",\n    \"create_subnet\",\n    \"create_token\",\n    \"created\",\n    \"created_at\",\n    \"created_at_time\",\n    \"created_date\",\n    \"created_neuron_id\",\n    \"created_timestamp_seconds\",\n    \"creation\",\n    \"creation_time\",\n    \"creator\",\n    \"credential_id\",\n    \"credential_jws\",\n    \"credential_spec\",\n    \"credential_type\",\n    \"credentials\",\n    \"credit\",\n    \"currency\",\n    \"current\",\n    \"current_basis_points\",\n    \"current_confirmations\",\n    \"current_deadline_timestamp_seconds\",\n    \"current_rate_sampling_interval_s\",\n    \"current_total_stake_e8s\",\n    \"current_version\",\n    \"cursor\",\n    \"custodians\",\n    \"custom_function_id_to_topic\",\n    \"custom_functions\",\n    \"cycles\",\n    \"cycles_for_archive_creation\",\n    \"cycles_for_index_creation\",\n    \"cycles_for_ledger_creation\",\n    \"cycles_ledger_canister_id\",\n    \"cycles_management\",\n    \"cycles_top_up_increment\",\n    \"d\",\n    \"daily\",\n    \"dance\",\n    \"dapp_canister_id\",\n    \"dapp_canister_ids\",\n    \"dapp_canister_summaries\",\n    \"dapp_canisters\",\n    \"dapp_canisters_transfer_result\",\n    \"dapps\",\n    \"data\",\n    \"data_centers_to_add\",\n    \"data_centers_to_remove\",\n    \"dateFromMillis\",\n    \"dateToMillis\",\n    \"date_added\",\n    \"date_filter\",\n    \"day_after_genesis\",\n    \"dc_id\",\n    \"deadline_timestamp_seconds\",\n    \"deauthorize\",\n    \"decentralization_sale_open_timestamp_seconds\",\n    \"decentralization_swap_termination_timestamp_seconds\",\n    \"decided_timestamp_seconds\",\n    \"deciding_voting_power\",\n    \"deciding_voting_power_buckets\",\n    \"decimals\",\n    \"declining_voting_power_neuron_subset_metrics\",\n    \"decrement\",\n    \"default_followees\",\n    \"delegation\",\n    \"delegations\",\n    \"delete\",\n    \"deleteUser\",\n    \"delete_asset\",\n    \"delete_batch\",\n    \"delete_canister\",\n    \"delete_note\",\n    \"delete_token\",\n    \"deploy_archive\",\n    \"deploy_guestos_to_all_subnet_nodes\",\n    \"deploy_guestos_to_all_unassigned_nodes\",\n    \"deploy_guestos_to_some_api_boundary_nodes\",\n    \"deploy_hostos_to_some_nodes\",\n    \"deploy_new_sns\",\n    \"deployed_version\",\n    \"deployment_chain\",\n    \"deposit\",\n    \"deposit_cycles\",\n    \"deposit_memo\",\n    \"deposit_with_subaccount_helper_contract_address\",\n    \"derivation_origin\",\n    \"derivation_path\",\n    \"derivation_paths\",\n    \"derived\",\n    \"derived_proposal_information\",\n    \"desc\",\n    \"description\",\n    \"design\",\n    \"destination\",\n    \"destination_address\",\n    \"destination_subnet\",\n    \"details\",\n    \"developer_distribution\",\n    \"developer_neurons\",\n    \"device\",\n    \"device_registration\",\n    \"device_registration_timeout\",\n    \"device_spec\",\n    \"device_type\",\n    \"devices\",\n    \"did_to_js\",\n    \"direct_participant_count\",\n    \"direct_participation_icp_e8s\",\n    \"direction\",\n    \"disburse_maturity_in_progress\",\n    \"disclose_rules\",\n    \"disclosed_at\",\n    \"dispenseTask\",\n    \"dissolve_delay\",\n    \"dissolve_delay_interval\",\n    \"dissolve_delay_interval_seconds\",\n    \"dissolve_delay_seconds\",\n    \"dissolve_state\",\n    \"dissolve_timestamp_seconds\",\n    \"dissolved_neurons_count\",\n    \"dissolved_neurons_e8s\",\n    \"dissolving_neurons_count\",\n    \"dissolving_neurons_count_buckets\",\n    \"dissolving_neurons_e8s_buckets\",\n    \"dissolving_neurons_e8s_buckets_ect\",\n    \"dissolving_neurons_e8s_buckets_seed\",\n    \"dissolving_neurons_staked_maturity_e8s_equivalent_buckets\",\n    \"dissolving_neurons_staked_maturity_e8s_equivalent_sum\",\n    \"distributed_e8s_equivalent\",\n    \"distributed_kyt_fee\",\n    \"dkg_dealings_per_block\",\n    \"dkg_interval_length\",\n    \"do_stuff\",\n    \"domain\",\n    \"donate_account\",\n    \"duration\",\n    \"duration_sec\",\n    \"e\",\n    \"e8s\",\n    \"earliest_retry\",\n    \"ecdsa_config\",\n    \"ecdsa_key\",\n    \"ecdsa_key_name\",\n    \"ecdsa_key_signing_disable\",\n    \"ecdsa_key_signing_enable\",\n    \"ecdsa_public_key\",\n    \"economics\",\n    \"ect_neuron_count\",\n    \"effective_gas_price\",\n    \"effective_transaction_fee\",\n    \"eip_1559_transaction_price\",\n    \"elected_replica_version\",\n    \"email\",\n    \"email_address\",\n    \"email_notifications\",\n    \"emotion\",\n    \"enable_aliasing\",\n    \"encode\",\n    \"encodings\",\n    \"encrypted_key\",\n    \"encrypted_symmetric_key_for_note\",\n    \"encrypted_text\",\n    \"end\",\n    \"end_time\",\n    \"end_timestamp_seconds\",\n    \"enter_device_registration_mode\",\n    \"entries\",\n    \"entries_buffer_limit\",\n    \"entries_fetch_limit\",\n    \"entry\",\n    \"env\",\n    \"erc20_balances\",\n    \"erc20_contract\",\n    \"erc20_contract_address\",\n    \"erc20_helper_contract_address\",\n    \"err\",\n    \"error\",\n    \"error_buffer_limit\",\n    \"error_code\",\n    \"error_message\",\n    \"error_refund_icp\",\n    \"error_text\",\n    \"error_type\",\n    \"errors\",\n    \"estimate_withdrawal_fee\",\n    \"eth_balance\",\n    \"eth_helper_contract_address\",\n    \"ethereum_address\",\n    \"ethereum_block_height\",\n    \"ethereum_contract_address\",\n    \"ethereum_network\",\n    \"event\",\n    \"event_aggregations\",\n    \"event_source\",\n    \"evidence\",\n    \"evm_rpc_id\",\n    \"exchange_rate_canister\",\n    \"exclude_topic\",\n    \"exclude_type\",\n    \"execute_many_instructions\",\n    \"executed_timestamp_seconds\",\n    \"existing_optional_request_field\",\n    \"existing_optional_response_field\",\n    \"existing_required_request_field\",\n    \"existing_required_response_field\",\n    \"existing_ticket\",\n    \"exit_device_registration_mode\",\n    \"expand_state\",\n    \"expected_allowance\",\n    \"expected_hash\",\n    \"expected_version\",\n    \"expiration\",\n    \"expireAt\",\n    \"expireIn\",\n    \"expires_at\",\n    \"explode\",\n    \"exportCertificates\",\n    \"exportCertificatesCertified\",\n    \"exportCertificatesPaginated\",\n    \"exposure_type\",\n    \"external_id\",\n    \"f\",\n    \"fail_stuck_upgrade_in_progress\",\n    \"failed\",\n    \"failed_timestamp_seconds\",\n    \"failed_transferred_neurons\",\n    \"failed_updates\",\n    \"failure\",\n    \"failure_reason\",\n    \"fallback_controller_principal_ids\",\n    \"feature_flags\",\n    \"features\",\n    \"fee\",\n    \"fee_collector_account\",\n    \"fetchGoogleKeys\",\n    \"fetch_entries\",\n    \"fetch_utxo_alerts\",\n    \"fetch_withdrawal_alerts\",\n    \"field\",\n    \"fieldnat\",\n    \"filter\",\n    \"final_neurons_fund_participation\",\n    \"final_reward_rate\",\n    \"final_reward_rate_basis_points\",\n    \"finalize_disbursement_timestamp_seconds\",\n    \"finalize_swap\",\n    \"finalize_swap_in_progress\",\n    \"find\",\n    \"firewall_config\",\n    \"first\",\n    \"firstTimeNanos\",\n    \"first_block_index\",\n    \"first_index\",\n    \"first_valid_index\",\n    \"followees\",\n    \"followers\",\n    \"followers_map\",\n    \"foo\",\n    \"forex_timestamp\",\n    \"forward_whitelisted_unclaimed_accounts\",\n    \"freezing_threshold\",\n    \"from\",\n    \"fromAmount\",\n    \"fromCall\",\n    \"fromQuery\",\n    \"fromTimeNanos\",\n    \"from_account\",\n    \"from_address\",\n    \"from_canister\",\n    \"from_ckerc20_subaccount\",\n    \"from_cketh_subaccount\",\n    \"from_direct_participation_icp_e8s\",\n    \"from_subaccount\",\n    \"from_treasury\",\n    \"from_user\",\n    \"frontend_hostname\",\n    \"full_neurons\",\n    \"full_participation_milestone_xdr\",\n    \"fully_lost_voting_power_neuron_subset_metrics\",\n    \"function\",\n    \"function_id\",\n    \"function_type\",\n    \"functions\",\n    \"g\",\n    \"garbage_collectable_neurons_count\",\n    \"gas_limit\",\n    \"gas_used\",\n    \"gateway_ip_addr\",\n    \"generate\",\n    \"genesis_timestamp_seconds\",\n    \"get\",\n    \"getAllBalances\",\n    \"getApprovedDip721\",\n    \"getBalance\",\n    \"getBalances\",\n    \"getCanisterId\",\n    \"getCertificate\",\n    \"getCount\",\n    \"getDelegation\",\n    \"getDepositAddress\",\n    \"getEmail\",\n    \"getEmailQueue\",\n    \"getInventory\",\n    \"getLatestMessages\",\n    \"getLogs\",\n    \"getMerchant\",\n    \"getMessages\",\n    \"getMetadataDip721\",\n    \"getMetdataForUserDip721\",\n    \"getOrder\",\n    \"getOrders\",\n    \"getPrincipal\",\n    \"getRegistration\",\n    \"getSchema\",\n    \"getStats\",\n    \"getSymbol\",\n    \"getVersion\",\n    \"get_account\",\n    \"get_account_by_anchor\",\n    \"get_account_by_principal\",\n    \"get_account_identifier_balance\",\n    \"get_account_identifier_transactions\",\n    \"get_account_transactions\",\n    \"get_all_accounts_json\",\n    \"get_all_icrc1_canisters\",\n    \"get_all_json\",\n    \"get_allowed_principals\",\n    \"get_anchor_credentials\",\n    \"get_anchor_entries\",\n    \"get_anchor_info\",\n    \"get_api_boundary_node_ids\",\n    \"get_asset_properties\",\n    \"get_auto_finalization_status\",\n    \"get_balance\",\n    \"get_blocks\",\n    \"get_btc_address\",\n    \"get_build_metadata\",\n    \"get_buyer_state\",\n    \"get_buyers_total\",\n    \"get_canister_status\",\n    \"get_canisters_by_root\",\n    \"get_chart\",\n    \"get_chunk\",\n    \"get_ciphertext\",\n    \"get_config\",\n    \"get_configuration\",\n    \"get_controllers\",\n    \"get_credential\",\n    \"get_custodians\",\n    \"get_data_certificate\",\n    \"get_default_subnets\",\n    \"get_delegation\",\n    \"get_deployed_sns_by_proposal_id\",\n    \"get_deployed_sns_by_proposal_id_result\",\n    \"get_deposit_fee\",\n    \"get_derived_state\",\n    \"get_devices\",\n    \"get_encoded_blocks\",\n    \"get_entries\",\n    \"get_events\",\n    \"get_events128\",\n    \"get_executed_functions_order\",\n    \"get_fee_collectors_ranges\",\n    \"get_full_neuron\",\n    \"get_full_neuron_by_id_or_subaccount\",\n    \"get_icp_xdr_conversion_rate\",\n    \"get_icrc1_paginated\",\n    \"get_id\",\n    \"get_id_alias\",\n    \"get_init\",\n    \"get_integer\",\n    \"get_known_utxos\",\n    \"get_kp\",\n    \"get_kp_certified\",\n    \"get_latest_reward_event\",\n    \"get_latest_sns_version_pretty\",\n    \"get_lifecycle\",\n    \"get_managed_canister_events\",\n    \"get_managed_canister_events128\",\n    \"get_maturity_modulation\",\n    \"get_mempool\",\n    \"get_metadata\",\n    \"get_metrics\",\n    \"get_metrics_result\",\n    \"get_minter_info\",\n    \"get_mode\",\n    \"get_monthly_node_provider_rewards\",\n    \"get_most_recent_monthly_node_provider_rewards\",\n    \"get_nervous_system_parameters\",\n    \"get_network_economics_parameters\",\n    \"get_neuron\",\n    \"get_neuron_ids\",\n    \"get_neuron_info\",\n    \"get_neuron_info_by_id_or_subaccount\",\n    \"get_neurons_fund_audit_info\",\n    \"get_next_sns_version\",\n    \"get_node_operators_and_dcs_of_node_provider\",\n    \"get_node_provider_by_caller\",\n    \"get_node_providers_monthly_xdr_rewards\",\n    \"get_notes\",\n    \"get_open_ticket\",\n    \"get_orchestrator_info\",\n    \"get_passkey\",\n    \"get_passkey_by_anchor\",\n    \"get_pending_proposals\",\n    \"get_policies\",\n    \"get_principal\",\n    \"get_principals_authorized_to_create_canisters_to_subnets\",\n    \"get_proposal\",\n    \"get_proposal_id_that_added_wasm\",\n    \"get_proposal_info\",\n    \"get_public_key\",\n    \"get_remaining_size_after_rebuild_device_index_slice_from_temp_stack\",\n    \"get_restore_aging_summary\",\n    \"get_root_canister_status\",\n    \"get_root_certified\",\n    \"get_rule_by_id\",\n    \"get_rules_by_incident_id\",\n    \"get_running_sns_version\",\n    \"get_sale_parameters\",\n    \"get_salt\",\n    \"get_sns_canisters_summary\",\n    \"get_sns_initialization_parameters\",\n    \"get_sns_subnet_ids\",\n    \"get_state\",\n    \"get_subnet_for_canister\",\n    \"get_subnet_types_to_subnets\",\n    \"get_system_params\",\n    \"get_timers\",\n    \"get_transaction\",\n    \"get_transactions\",\n    \"get_trusted_origins\",\n    \"get_trusted_origins_certified\",\n    \"get_tvl\",\n    \"get_unsynced_pubkeys\",\n    \"get_upgrade_journal\",\n    \"get_utxos_cache_expiration_seconds\",\n    \"get_vaults\",\n    \"get_vaults_by_address\",\n    \"get_wallets\",\n    \"get_wasm\",\n    \"get_wasm_metadata\",\n    \"get_withdrawal_account\",\n    \"gift\",\n    \"git_branch\",\n    \"git_commit_hash\",\n    \"global_failures\",\n    \"gossip_max_artifact_streams_per_peer\",\n    \"gossip_max_chunk_size\",\n    \"gossip_max_chunk_wait_ms\",\n    \"gossip_max_duplicity\",\n    \"gossip_pfn_evaluation_period_ms\",\n    \"gossip_receive_check_cache_size\",\n    \"gossip_registry_poll_period_ms\",\n    \"gossip_retransmission_request_ms\",\n    \"governance\",\n    \"governance_canister_id\",\n    \"governance_canister_summary\",\n    \"governance_error\",\n    \"governance_id\",\n    \"governance_parameters\",\n    \"governance_wasm_hash\",\n    \"gps\",\n    \"grant_permission\",\n    \"granularity\",\n    \"greet\",\n    \"greet_no_consent\",\n    \"greet_update_call\",\n    \"greeting\",\n    \"group_type\",\n    \"groups\",\n    \"guest_launch_measurement_sha256_hex\",\n    \"h\",\n    \"halt_at_cup_height\",\n    \"hard_reset_root_to_version\",\n    \"has_auto_finalize_been_attempted\",\n    \"has_claimed\",\n    \"has_created_neuron_recipes\",\n    \"has_donated\",\n    \"has_forwarded\",\n    \"hash\",\n    \"hash_mode\",\n    \"hash_tree\",\n    \"header\",\n    \"headers\",\n    \"headers_number\",\n    \"heartbeat\",\n    \"height\",\n    \"hostos_version_id\",\n    \"hostos_version_to_elect\",\n    \"hostos_versions_to_unelect\",\n    \"hot_key_to_remove\",\n    \"hot_keys\",\n    \"hotkey\",\n    \"hotkey_principal\",\n    \"hotkeys\",\n    \"hourly\",\n    \"http_endpoint\",\n    \"http_request\",\n    \"http_request_streaming_callback\",\n    \"http_request_update\",\n    \"http_requests\",\n    \"http_streaming\",\n    \"human_readable\",\n    \"ic0_trap\",\n    \"ic_root_key_der\",\n    \"icon\",\n    \"icp\",\n    \"icp_accepted_participation_e8s\",\n    \"icp_ledger_account_balance_e8s\",\n    \"icp_ledger_canister_id\",\n    \"icps_per_token\",\n    \"icpts\",\n    \"icrc103_get_allowances\",\n    \"icrc106_get_index_principal\",\n    \"icrc10_supported_standards\",\n    \"icrc1_balance_of\",\n    \"icrc1_decimals\",\n    \"icrc1_fee\",\n    \"icrc1_memo\",\n    \"icrc1_metadata\",\n    \"icrc1_minting_account\",\n    \"icrc1_name\",\n    \"icrc1_supported_standards\",\n    \"icrc1_symbol\",\n    \"icrc1_token_symbol\",\n    \"icrc1_total_supply\",\n    \"icrc1_transfer\",\n    \"icrc2\",\n    \"icrc21_canister_call_consent_message\",\n    \"icrc28_trusted_origins\",\n    \"icrc2_allowance\",\n    \"icrc2_approve\",\n    \"icrc2_transfer_from\",\n    \"icrc3_get_archives\",\n    \"icrc3_get_blocks\",\n    \"icrc3_get_tip_certificate\",\n    \"icrc3_supported_block_types\",\n    \"id\",\n    \"idSeed\",\n    \"id_alias\",\n    \"id_dapp\",\n    \"id_to_nervous_system_functions\",\n    \"ideal_matched_participation_function\",\n    \"identity_authn_info\",\n    \"identity_info\",\n    \"identity_metadata_replace\",\n    \"identity_number\",\n    \"identity_register\",\n    \"identity_registration_finish\",\n    \"identity_registration_start\",\n    \"idkg_dealing_encryption_pk\",\n    \"idkg_key_rotation_period_ms\",\n    \"idle_cycles_burned_per_day\",\n    \"idp_canister_ids\",\n    \"ignored_utxo\",\n    \"ii_canister\",\n    \"ii_canister_id\",\n    \"im_canister\",\n    \"img\",\n    \"inProgressTtl\",\n    \"in_flight_commands\",\n    \"inc\",\n    \"inc_a\",\n    \"inc_b\",\n    \"inc_read\",\n    \"incident_id\",\n    \"include_all_manage_neuron_proposals\",\n    \"include_ballots_by_caller\",\n    \"include_empty_neurons_readable_by_caller\",\n    \"include_neurons_readable_by_caller\",\n    \"include_public_neurons_in_full_neurons\",\n    \"include_reward_status\",\n    \"include_status\",\n    \"include_topic_filtering\",\n    \"include_topics\",\n    \"increment\",\n    \"increment_array\",\n    \"index\",\n    \"index_canister_id\",\n    \"index_compressed_wasm_hash\",\n    \"index_id\",\n    \"index_principal\",\n    \"index_wasm_hash\",\n    \"info\",\n    \"ingress_bytes_per_block_soft_cap\",\n    \"init\",\n    \"init_arg\",\n    \"init_salt\",\n    \"initial_balances\",\n    \"initial_cycles\",\n    \"initial_neurons_fund_participation\",\n    \"initial_notary_delay_millis\",\n    \"initial_reward_rate\",\n    \"initial_reward_rate_basis_points\",\n    \"initial_supply\",\n    \"initial_swap_amount_e8s\",\n    \"initial_token_distribution\",\n    \"initial_values\",\n    \"initial_voting_period_seconds\",\n    \"inject_prune_event\",\n    \"input\",\n    \"insert\",\n    \"insert_upgrade_path_entries\",\n    \"install_chunked_code\",\n    \"install_code\",\n    \"install_mode\",\n    \"installed_wasm_hash\",\n    \"instances\",\n    \"instructions\",\n    \"intended_neurons_fund_participation_icp_e8s\",\n    \"intercept_icp_e8s\",\n    \"invalid\",\n    \"invalid_metadata\",\n    \"invalid_user_amount\",\n    \"investor\",\n    \"ip_addr\",\n    \"ipv4_config\",\n    \"ipv4_prefixes\",\n    \"ipv6\",\n    \"ipv6_prefixes\",\n    \"is2fa_enabled\",\n    \"isApprovedForAllDip721\",\n    \"isMyself\",\n    \"is_address_blocked\",\n    \"is_advanced_automatically\",\n    \"is_aliased\",\n    \"is_authorized\",\n    \"is_auto_finalize_enabled\",\n    \"is_capped\",\n    \"is_critical\",\n    \"is_custodian\",\n    \"is_eligible_for_rewards\",\n    \"is_finalizing_disburse_maturity\",\n    \"is_halted\",\n    \"is_iframe_allowed\",\n    \"is_item_processed\",\n    \"is_ledger_ready\",\n    \"is_nft_storage\",\n    \"is_redacted\",\n    \"is_seeded\",\n    \"is_trusted\",\n    \"is_whitelisted\",\n    \"is_whitelisted_for_forwarding\",\n    \"iso_codes\",\n    \"iss\",\n    \"issuer\",\n    \"issuer_id_alias_credential\",\n    \"issuer_id_alias_jwt\",\n    \"joined_community_fund_timestamp_seconds\",\n    \"key\",\n    \"key_config\",\n    \"key_configs\",\n    \"key_id\",\n    \"key_ids\",\n    \"key_pair\",\n    \"key_type\",\n    \"key_val_data\",\n    \"keys\",\n    \"kid\",\n    \"kind\",\n    \"known_neuron_data\",\n    \"known_neurons\",\n    \"kty\",\n    \"kyc_verified\",\n    \"kyt_fee\",\n    \"kyt_principal\",\n    \"kyt_provider\",\n    \"label\",\n    \"lambda\",\n    \"lambda_url\",\n    \"language\",\n    \"last\",\n    \"lastAccess\",\n    \"lastAnalyzedMessageTimeNanos\",\n    \"lastTimeNanos\",\n    \"last_authentication\",\n    \"last_block\",\n    \"last_deposit_with_subaccount_scraped_block_number\",\n    \"last_erc20_scraped_block_number\",\n    \"last_eth_scraped_block_number\",\n    \"last_gas_fee_estimate\",\n    \"last_ledger_block_timestamp\",\n    \"last_observed_block_number\",\n    \"last_purged_notification\",\n    \"last_reset_timestamp_seconds\",\n    \"last_scraped_block_number\",\n    \"last_spawned_timestamp_seconds\",\n    \"last_successful_fetch\",\n    \"last_usage\",\n    \"last_usage_timestamp\",\n    \"last_used\",\n    \"latest_delegation_origins\",\n    \"latest_reward_event\",\n    \"latest_round_available_e8s_equivalent\",\n    \"latest_tally\",\n    \"leaf\",\n    \"ledger\",\n    \"ledger_archive_canister_summaries\",\n    \"ledger_burn_index\",\n    \"ledger_canister_id\",\n    \"ledger_canister_summary\",\n    \"ledger_compressed_wasm_hash\",\n    \"ledger_id\",\n    \"ledger_index_canister_summary\",\n    \"ledger_init_arg\",\n    \"ledger_parameters\",\n    \"ledger_suite_orchestrator_id\",\n    \"ledger_suite_version\",\n    \"ledger_wasm_hash\",\n    \"left\",\n    \"len\",\n    \"length\",\n    \"level\",\n    \"lifecycle\",\n    \"limit\",\n    \"limit_stable_memory_page\",\n    \"lines\",\n    \"lines_per_page\",\n    \"list\",\n    \"listAllowedPrincipals\",\n    \"listGiftcards\",\n    \"listRegistrations\",\n    \"listTasks\",\n    \"list_accounts\",\n    \"list_addresses\",\n    \"list_authorized\",\n    \"list_community_fund_participants\",\n    \"list_deployed_snses\",\n    \"list_direct_participants\",\n    \"list_known_neurons\",\n    \"list_managed_canisters\",\n    \"list_nervous_system_functions\",\n    \"list_neurons\",\n    \"list_node_provider_rewards\",\n    \"list_node_providers\",\n    \"list_permitted\",\n    \"list_proposals\",\n    \"list_sns_canisters\",\n    \"list_sns_neuron_recipes\",\n    \"list_subaccounts\",\n    \"list_topics\",\n    \"list_upgrade_steps\",\n    \"log_index\",\n    \"log_length\",\n    \"log_visibility\",\n    \"logo\",\n    \"logoDip721\",\n    \"logo_type\",\n    \"lookup\",\n    \"main\",\n    \"maintainers\",\n    \"make_struct\",\n    \"make_struct2\",\n    \"making_sns_proposal\",\n    \"manage_dapp_canister_settings\",\n    \"manage_ledger_suites\",\n    \"manage_neuron\",\n    \"manage_permissions\",\n    \"managed_canisters\",\n    \"managed_pre_existing_ledger_suites\",\n    \"managementTaskInterval\",\n    \"mark_failed_at_seconds\",\n    \"maturity_disbursements_in_progress\",\n    \"maturity_e8s\",\n    \"maturity_e8s_equivalent\",\n    \"maturity_e8s_equivalent_buckets\",\n    \"maturity_equivalent_icp_e8s\",\n    \"maturity_modulation\",\n    \"maturity_modulation_disabled\",\n    \"maturity_modulation_last_updated_at_timestamp_seconds\",\n    \"max\",\n    \"max_age\",\n    \"max_age_bonus_percentage\",\n    \"max_amount_icp_e8s_included\",\n    \"max_artifact_streams_per_peer\",\n    \"max_batches\",\n    \"max_block_payload_size\",\n    \"max_bytes\",\n    \"max_chunk_size\",\n    \"max_chunk_wait_ms\",\n    \"max_chunks\",\n    \"max_clock_skew\",\n    \"max_direct_participation_icp_e8s\",\n    \"max_dissolve_delay_bonus_percentage\",\n    \"max_dissolve_delay_seconds\",\n    \"max_duplicity\",\n    \"max_entries_per_call\",\n    \"max_fee\",\n    \"max_fee_per_gas\",\n    \"max_followees_per_function\",\n    \"max_icp_e8s\",\n    \"max_inflight_captchas\",\n    \"max_ingress_bytes_per_message\",\n    \"max_ingress_messages_per_block\",\n    \"max_iterations\",\n    \"max_memo_length\",\n    \"max_memory_size_bytes\",\n    \"max_message_size_bytes\",\n    \"max_neuron_age_for_age_bonus\",\n    \"max_neuron_age_seconds_for_age_bonus\",\n    \"max_neurons_fund_participation_icp_e8s\",\n    \"max_neurons_fund_swap_participation_icp_e8s\",\n    \"max_num_latest_delegation_origins\",\n    \"max_number_of_canisters\",\n    \"max_number_of_neurons\",\n    \"max_number_of_principals_per_neuron\",\n    \"max_number_of_proposals_with_ballots\",\n    \"max_participant_icp_e8s\",\n    \"max_priority_fee_per_gas\",\n    \"max_proposals_to_keep_per_action\",\n    \"max_proposals_to_keep_per_topic\",\n    \"max_queue_size\",\n    \"max_response_bytes\",\n    \"max_results\",\n    \"max_rewardable_nodes\",\n    \"max_theoretical_neurons_fund_participation_amount_xdr\",\n    \"max_time_in_queue_nanos\",\n    \"max_tokens\",\n    \"max_transaction_fee\",\n    \"max_transactions_per_response\",\n    \"max_unsolved_captchas\",\n    \"maximum_direct_participation_icp\",\n    \"maximum_icp\",\n    \"maximum_icp_xdr_rate\",\n    \"maximum_node_provider_rewards_e8s\",\n    \"maximum_number_of_accounts\",\n    \"maximum_participant_icp\",\n    \"member_threshold\",\n    \"members\",\n    \"memo\",\n    \"memory_allocation\",\n    \"memory_size\",\n    \"merge_init_args\",\n    \"merged_maturity_e8s\",\n    \"merkle_root_hash\",\n    \"message\",\n    \"messageContains\",\n    \"messageRegex\",\n    \"message_hash\",\n    \"messages\",\n    \"messagesInfo\",\n    \"metadata\",\n    \"metadata_desc\",\n    \"metadata_keys\",\n    \"method\",\n    \"method_name\",\n    \"metrics\",\n    \"migrate_canisters\",\n    \"migration_trace\",\n    \"migrations\",\n    \"min\",\n    \"min_amount_icp_e8s_included\",\n    \"min_confirmations\",\n    \"min_direct_participation_icp_e8s\",\n    \"min_direct_participation_threshold_icp_e8s\",\n    \"min_icp_e8s\",\n    \"min_participant_icp_e8s\",\n    \"min_participants\",\n    \"minimum_direct_participation_icp\",\n    \"minimum_icp\",\n    \"minimum_icp_xdr_rate\",\n    \"minimum_participant_icp\",\n    \"minimum_participants\",\n    \"minimum_withdrawal_amount\",\n    \"minimum_xdr_permyriad_per_icp\",\n    \"minimum_yes_proportion_of_exercised\",\n    \"minimum_yes_proportion_of_total\",\n    \"mint\",\n    \"mintDip721\",\n    \"mint_block_index\",\n    \"mint_tokens\",\n    \"mint_txid\",\n    \"minted\",\n    \"minted_amount\",\n    \"minter_address\",\n    \"minter_id\",\n    \"minting_account\",\n    \"minting_account_id\",\n    \"mode\",\n    \"modified\",\n    \"modified_date\",\n    \"module_arg\",\n    \"module_hash\",\n    \"more_controller_ids\",\n    \"most_recent_monthly_node_provider_rewards\",\n    \"motion_text\",\n    \"n\",\n    \"name\",\n    \"nameDip721\",\n    \"nanos\",\n    \"native_functions\",\n    \"network\",\n    \"network_topology\",\n    \"neuron_attributes\",\n    \"neuron_basket_construction_parameters\",\n    \"neuron_claimer_permissions\",\n    \"neuron_fees_e8s\",\n    \"neuron_grantable_permissions\",\n    \"neuron_id\",\n    \"neuron_id_or_subaccount\",\n    \"neuron_ids\",\n    \"neuron_indexes_migration\",\n    \"neuron_infos\",\n    \"neuron_management_fee_per_proposal_e8s\",\n    \"neuron_management_voting_period_seconds\",\n    \"neuron_maximum_age_bonus\",\n    \"neuron_maximum_age_for_age_bonus\",\n    \"neuron_maximum_dissolve_delay\",\n    \"neuron_maximum_dissolve_delay_bonus\",\n    \"neuron_minimum_dissolve_delay_to_vote\",\n    \"neuron_minimum_dissolve_delay_to_vote_seconds\",\n    \"neuron_minimum_stake\",\n    \"neuron_minimum_stake_e8s\",\n    \"neuron_recipes\",\n    \"neuron_spawn_dissolve_delay_seconds\",\n    \"neuron_stake_e8s\",\n    \"neuron_subaccounts\",\n    \"neuron_type\",\n    \"neurons\",\n    \"neurons_fund_audit_info\",\n    \"neurons_fund_data\",\n    \"neurons_fund_economics\",\n    \"neurons_fund_investment_icp\",\n    \"neurons_fund_matched_funding_curve_coefficients\",\n    \"neurons_fund_neuron_portions\",\n    \"neurons_fund_neurons_count\",\n    \"neurons_fund_participation\",\n    \"neurons_fund_participation_constraints\",\n    \"neurons_fund_participation_icp_e8s\",\n    \"neurons_fund_refunds\",\n    \"neurons_fund_reserves\",\n    \"neurons_fund_total_active_neurons\",\n    \"neurons_with_invalid_stake_count\",\n    \"neurons_with_less_than_6_months_dissolve_delay_count\",\n    \"neurons_with_less_than_6_months_dissolve_delay_e8s\",\n    \"new_canister_wasm\",\n    \"new_captcha_png_base64\",\n    \"new_controller\",\n    \"new_controllers\",\n    \"new_device\",\n    \"new_entries\",\n    \"new_hot_key\",\n    \"new_maturity_e8s\",\n    \"new_method\",\n    \"new_sale_ticket\",\n    \"new_stake_e8s\",\n    \"new_target\",\n    \"new_target_version\",\n    \"new_txid\",\n    \"new_values\",\n    \"next\",\n    \"next_page\",\n    \"next_step\",\n    \"next_ticket_id\",\n    \"next_token\",\n    \"next_transaction_nonce\",\n    \"next_version\",\n    \"ni_dkg_dealing_encryption_pk\",\n    \"nns_controlled_dapp_canisters\",\n    \"nns_function\",\n    \"nns_governance_canister_id\",\n    \"nns_neuron_controller\",\n    \"nns_neuron_hotkeys\",\n    \"nns_neuron_id\",\n    \"nns_proposal_id\",\n    \"no\",\n    \"node_allowance\",\n    \"node_id\",\n    \"node_ids\",\n    \"node_ids_add\",\n    \"node_ids_remove\",\n    \"node_max_memory_size_bytes\",\n    \"node_metrics\",\n    \"node_metrics_history\",\n    \"node_metrics_history_proxy\",\n    \"node_operator_id\",\n    \"node_operator_principal_id\",\n    \"node_operator_principals_to_remove\",\n    \"node_operators_to_remove\",\n    \"node_provider\",\n    \"node_provider_id\",\n    \"node_provider_principal_id\",\n    \"node_providers\",\n    \"node_reward_type\",\n    \"node_signing_pk\",\n    \"non_self_authenticating_controller_neuron_subset_metrics\",\n    \"nonce\",\n    \"not_dissolving_neurons_count\",\n    \"not_dissolving_neurons_count_buckets\",\n    \"not_dissolving_neurons_e8s_buckets\",\n    \"not_dissolving_neurons_e8s_buckets_ect\",\n    \"not_dissolving_neurons_e8s_buckets_seed\",\n    \"not_dissolving_neurons_staked_maturity_e8s_equivalent_buckets\",\n    \"not_dissolving_neurons_staked_maturity_e8s_equivalent_sum\",\n    \"not_for_profit\",\n    \"notify_create_canister\",\n    \"notify_dfx\",\n    \"notify_mint_cycles\",\n    \"notify_payment_failure\",\n    \"notify_top_up\",\n    \"num_block_failures_total\",\n    \"num_blocks_proposed_total\",\n    \"num_blocks_synced\",\n    \"num_blocks_to_archive\",\n    \"num_blocks_total\",\n    \"num_calls_total\",\n    \"num_instructions_total\",\n    \"num_recently_submitted_proposals\",\n    \"num_requested_changes\",\n    \"num_subnet_nodes\",\n    \"number_of_entries\",\n    \"o\",\n    \"of_principal\",\n    \"offset\",\n    \"ok\",\n    \"old_device\",\n    \"old_target_version\",\n    \"old_txid\",\n    \"oldest_tx_id\",\n    \"omit_large_fields\",\n    \"onDIP721Received\",\n    \"one_third_participation_milestone_xdr\",\n    \"oob\",\n    \"open_sns_token_swap_proposal_id\",\n    \"open_time_window\",\n    \"openid_credential_add\",\n    \"openid_credential_remove\",\n    \"openid_credentials\",\n    \"openid_google\",\n    \"operation\",\n    \"operation_type\",\n    \"operations\",\n    \"operator\",\n    \"origin\",\n    \"original_total_community_fund_maturity_e8s_equivalent\",\n    \"outpoint\",\n    \"owned_nfts\",\n    \"owner\",\n    \"ownerOfDip721\",\n    \"p\",\n    \"p2p_flow_endpoints\",\n    \"p2pkh\",\n    \"p2sh\",\n    \"p2tr_v1\",\n    \"p2wpkh_v0\",\n    \"p2wsh_v0\",\n    \"page\",\n    \"page_number\",\n    \"page_size\",\n    \"pages\",\n    \"pair\",\n    \"parallel_calls\",\n    \"parameters\",\n    \"params\",\n    \"parent_hash\",\n    \"participant\",\n    \"participant_id\",\n    \"participants\",\n    \"participation\",\n    \"pause_account_creation\",\n    \"payload\",\n    \"payload_size_bytes\",\n    \"payload_text_rendering\",\n    \"payment\",\n    \"peekTask\",\n    \"pending_utxos\",\n    \"pending_version\",\n    \"percentage_to_disburse\",\n    \"percentage_to_merge\",\n    \"percentage_to_spawn\",\n    \"percentage_to_stake\",\n    \"permission\",\n    \"permission_type\",\n    \"permissions\",\n    \"permissions_to_add\",\n    \"permissions_to_remove\",\n    \"persona_id\",\n    \"persona_name\",\n    \"personas\",\n    \"pfn_evaluation_period_ms\",\n    \"phone\",\n    \"phone_notifications\",\n    \"phone_number\",\n    \"placeOrder\",\n    \"png_base64\",\n    \"policies\",\n    \"policy_id\",\n    \"policy_type\",\n    \"polling_interval_ns\",\n    \"ports\",\n    \"positions\",\n    \"possibility\",\n    \"potential_voting_power\",\n    \"potential_voting_power_buckets\",\n    \"pre_signatures_to_create_in_advance\",\n    \"preferences\",\n    \"prefix_length\",\n    \"prepare\",\n    \"prepareDelegation\",\n    \"prepare_canister_migration\",\n    \"prepare_credential\",\n    \"prepare_delegation\",\n    \"prepare_id_alias\",\n    \"prepared_context\",\n    \"pretty_version\",\n    \"prev_spender\",\n    \"previous_total_stake_e8s\",\n    \"princ\",\n    \"principal_id\",\n    \"principals\",\n    \"private_key_encrypted\",\n    \"process_all_items_with_panicking_callback\",\n    \"process_single_item_with_panicking_callback\",\n    \"produceId\",\n    \"produce_id\",\n    \"profiling\",\n    \"progress\",\n    \"prometheus_metrics_endpoint\",\n    \"proposal\",\n    \"proposal_creation_timestamp_seconds\",\n    \"proposal_id\",\n    \"proposal_info\",\n    \"proposal_initial_voting_period\",\n    \"proposal_reject_cost_e8s\",\n    \"proposal_rejection_fee\",\n    \"proposal_submission_deposit\",\n    \"proposal_timestamp_seconds\",\n    \"proposal_vote_threshold\",\n    \"proposal_wait_for_quiet_deadline_increase\",\n    \"proposals\",\n    \"propose_commit_batch\",\n    \"proposer\",\n    \"proposer_id\",\n    \"protection\",\n    \"provider\",\n    \"provisional_create_canister_with_cycles\",\n    \"provisional_top_up_canister\",\n    \"prune_events_if_necessary\",\n    \"pubKey\",\n    \"pub_key\",\n    \"pubkey\",\n    \"public_ipv4_config\",\n    \"public_key\",\n    \"public_neuron_subset_metrics\",\n    \"purge_old_tickets_last_completion_timestamp_nanoseconds\",\n    \"purge_old_tickets_next_principal\",\n    \"purpose\",\n    \"push_utxo_to_address\",\n    \"quadruples_to_create_in_advance\",\n    \"quantity\",\n    \"queryGreet\",\n    \"query_blocks\",\n    \"query_encoded_blocks\",\n    \"query_stats\",\n    \"queueTask\",\n    \"quote_asset\",\n    \"quote_asset_num_queried_sources\",\n    \"quote_asset_num_received_rates\",\n    \"rand_seed\",\n    \"ranges\",\n    \"rate\",\n    \"raw_rand\",\n    \"raw_transaction\",\n    \"read\",\n    \"readFloat\",\n    \"read_access_points\",\n    \"read_applications\",\n    \"read_personas\",\n    \"read_state\",\n    \"reason\",\n    \"reassigned_canister_ranges\",\n    \"receive_check_cache_size\",\n    \"received\",\n    \"received_at\",\n    \"received_utxos\",\n    \"receiver\",\n    \"recent_ballots\",\n    \"recent_changes\",\n    \"recipient\",\n    \"recipient_address\",\n    \"recover_subnet\",\n    \"recovery_authn_methods\",\n    \"recovery_credentials\",\n    \"recovery_phrases\",\n    \"reference_rate_sampling_interval_s\",\n    \"reflexive_transitive_controllers\",\n    \"refresh_buyer_tokens\",\n    \"refresh_cached_upgrade_steps\",\n    \"refreshed_neuron_id\",\n    \"refund\",\n    \"refund_amount\",\n    \"refundable\",\n    \"regenerate_now\",\n    \"region\",\n    \"register\",\n    \"register_anchor\",\n    \"register_dapp_canister\",\n    \"register_dapp_canisters\",\n    \"register_device\",\n    \"register_policy\",\n    \"register_rate_limit\",\n    \"register_transaction\",\n    \"register_vault\",\n    \"register_wallet\",\n    \"registered\",\n    \"registrationExpirationTtl\",\n    \"registry_poll_period_ms\",\n    \"registry_polling_interval_secs\",\n    \"registry_polling_period_secs\",\n    \"registry_store_uri\",\n    \"registry_version\",\n    \"regtest\",\n    \"reimbursed_amount\",\n    \"reimbursed_failed_deposit\",\n    \"reimbursed_in_block\",\n    \"reimbursement_account\",\n    \"reject_cost_e8s\",\n    \"reject_query\",\n    \"reject_update\",\n    \"rejection_code\",\n    \"related_origins\",\n    \"release_package_sha256_hex\",\n    \"release_package_urls\",\n    \"relying_party\",\n    \"remaining_capacity\",\n    \"remove\",\n    \"removeRegistration\",\n    \"removeTask\",\n    \"remove_access_point\",\n    \"remove_account\",\n    \"remove_account_by_principal\",\n    \"remove_address\",\n    \"remove_api_boundary_nodes\",\n    \"remove_controller\",\n    \"remove_cycles_add\",\n    \"remove_device\",\n    \"remove_firewall_rules\",\n    \"remove_icrc1_canister\",\n    \"remove_node_directly\",\n    \"remove_node_operators\",\n    \"remove_nodes\",\n    \"remove_nodes_from_subnet\",\n    \"remove_openid_credential\",\n    \"remove_passkey\",\n    \"remove_user\",\n    \"remove_utxo\",\n    \"removed_in_version\",\n    \"removed_principals\",\n    \"removed_retrieve_btc_request\",\n    \"replace\",\n    \"replace_device\",\n    \"replace_icrc1_canisters\",\n    \"replaced_transaction\",\n    \"replacement_nodes\",\n    \"replica_version\",\n    \"replica_version_id\",\n    \"replica_version_to_elect\",\n    \"replica_versions_to_unelect\",\n    \"reply_or_defer\",\n    \"request\",\n    \"request_payload_bytes_total\",\n    \"requested_index\",\n    \"requested_setting_for_auto_stake_maturity\",\n    \"requested_timestamp_seconds\",\n    \"requests\",\n    \"required_confirmations\",\n    \"requires_periodic_tasks\",\n    \"reroute_canister_ranges\",\n    \"reserved_cycles\",\n    \"reserved_cycles_limit\",\n    \"reserved_ids\",\n    \"reset\",\n    \"reset_mempool\",\n    \"reset_timers\",\n    \"response\",\n    \"response_payload_bytes_total\",\n    \"response_timestamp_seconds\",\n    \"restore_accounts\",\n    \"restore_aging_summary\",\n    \"restored_dapp_canisters\",\n    \"restricted_countries\",\n    \"result\",\n    \"retransmission_request_ms\",\n    \"retries_left\",\n    \"retrieve_blocks_from_ledger_interval_seconds\",\n    \"retrieve_btc\",\n    \"retrieve_btc_kyt_failed\",\n    \"retrieve_btc_min_amount\",\n    \"retrieve_btc_status\",\n    \"retrieve_btc_status_v2\",\n    \"retrieve_btc_status_v2_by_account\",\n    \"retrieve_btc_with_approval\",\n    \"retrieve_eth_status\",\n    \"retrieved_at_timestamp_seconds\",\n    \"return\",\n    \"return_cycles\",\n    \"revise_elected_guestos_versions\",\n    \"revise_elected_hostos_versions\",\n    \"revise_elected_replica_versions\",\n    \"revoke_permission\",\n    \"revoked\",\n    \"revoking\",\n    \"reward_account\",\n    \"reward_coefficient_percent\",\n    \"reward_event_end_timestamp_seconds\",\n    \"reward_event_round\",\n    \"reward_mode\",\n    \"reward_rate_transition_duration\",\n    \"reward_rate_transition_duration_seconds\",\n    \"reward_status\",\n    \"rewardable_nodes\",\n    \"rewards\",\n    \"right\",\n    \"rmAllowedPrincipal\",\n    \"role\",\n    \"root\",\n    \"rootPrincipals\",\n    \"root_ca_certificate\",\n    \"root_canister_id\",\n    \"root_canister_summary\",\n    \"root_wasm_hash\",\n    \"round\",\n    \"round_duration_seconds\",\n    \"rounds_since_last_distribution\",\n    \"rows\",\n    \"rp_id_alias_credential\",\n    \"rp_id_alias_jwt\",\n    \"rts_collector_instructions\",\n    \"rts_heap_size\",\n    \"rts_logical_stable_memory_size\",\n    \"rts_memory_size\",\n    \"rts_mutator_instructions\",\n    \"rts_reclaimed\",\n    \"rts_stable_memory_size\",\n    \"rts_total_allocation\",\n    \"rule_id\",\n    \"rule_raw\",\n    \"rules\",\n    \"runCellQuery\",\n    \"runCellUpdate\",\n    \"runCellUpdateAwait\",\n    \"run_batch\",\n    \"run_scenario\",\n    \"safeTransferFromDip721\",\n    \"safeTransferFromNotifyDip721\",\n    \"sale_delay_seconds\",\n    \"salt\",\n    \"salt_generation_strategy\",\n    \"salt_id\",\n    \"save_temp_stack_to_rebuild_device_index\",\n    \"scenario\",\n    \"schedule_deposit_reimbursement\",\n    \"schema_version\",\n    \"schnorr_public_key\",\n    \"scope\",\n    \"score\",\n    \"seconds\",\n    \"seconds_after_utc_midnight\",\n    \"secs\",\n    \"sections\",\n    \"security_settings\",\n    \"seed\",\n    \"seed_neuron_count\",\n    \"send\",\n    \"sendRequested\",\n    \"sendStatus\",\n    \"send_dfx\",\n    \"send_eth\",\n    \"send_whitelist\",\n    \"sender\",\n    \"sender_canister_version\",\n    \"sent_transaction\",\n    \"sequence_number\",\n    \"sequential_calls\",\n    \"serialized_representation\",\n    \"service\",\n    \"set\",\n    \"setApprovalForAllDip721\",\n    \"setCourierApiKey\",\n    \"setGoogleKeys\",\n    \"set_alternative_origins\",\n    \"set_api_key\",\n    \"set_asset_content\",\n    \"set_asset_properties\",\n    \"set_authorized\",\n    \"set_custodian\",\n    \"set_dapp_controllers\",\n    \"set_dapp_controllers_call_result\",\n    \"set_derivation_origin\",\n    \"set_fee_percentiles\",\n    \"set_firewall_config\",\n    \"set_gossip_config_to_default\",\n    \"set_id\",\n    \"set_integer\",\n    \"set_ipv6_to_none\",\n    \"set_logo\",\n    \"set_mode\",\n    \"set_mode_call_result\",\n    \"set_name\",\n    \"set_non_processed_items\",\n    \"set_operator\",\n    \"set_permissions\",\n    \"set_short_name\",\n    \"set_symbol\",\n    \"set_tip_height\",\n    \"settings\",\n    \"settle_community_fund_participation\",\n    \"settle_community_fund_participation_result\",\n    \"settle_neurons_fund_participation\",\n    \"settle_neurons_fund_participation_result\",\n    \"settled_proposals\",\n    \"setup_callee\",\n    \"sev_enabled\",\n    \"sha256\",\n    \"short_voting_period_seconds\",\n    \"should_auto_finalize\",\n    \"show\",\n    \"showGiftcard\",\n    \"sign\",\n    \"sign_with_ecdsa\",\n    \"sign_with_schnorr\",\n    \"signature\",\n    \"signature_request_timeout_ns\",\n    \"signed_delegation\",\n    \"signed_id_alias\",\n    \"signer\",\n    \"simulate_manage_neuron\",\n    \"skip_pre_upgrade\",\n    \"skip_stopping_before_installing\",\n    \"skipped\",\n    \"slope_denominator\",\n    \"slope_numerator\",\n    \"smart_contract_address\",\n    \"sns\",\n    \"sns_controlled_dapp_canisters\",\n    \"sns_governance_canister_id\",\n    \"sns_init_payload\",\n    \"sns_initialization_parameters\",\n    \"sns_ledger_canister_id\",\n    \"sns_metadata\",\n    \"sns_neuron_recipes\",\n    \"sns_root_canister_id\",\n    \"sns_subnet_ids\",\n    \"sns_subnet_ids_to_add\",\n    \"sns_subnet_ids_to_remove\",\n    \"sns_token_e8s\",\n    \"sns_token_swap_lifecycle\",\n    \"sns_tokens_per_icp\",\n    \"solution\",\n    \"source_amount\",\n    \"source_ledger\",\n    \"source_neuron\",\n    \"source_neuron_id\",\n    \"source_neuron_info\",\n    \"source_nns_neuron_id\",\n    \"source_principal_id\",\n    \"source_subnet\",\n    \"space_available\",\n    \"space_required\",\n    \"spawn_at_timestamp_seconds\",\n    \"spawning_neurons\",\n    \"specified_id\",\n    \"spender\",\n    \"spender_subaccount\",\n    \"ssh_backup_access\",\n    \"ssh_readonly_access\",\n    \"ssh_readonly_keys\",\n    \"stable_memory_size\",\n    \"stable_oob\",\n    \"stage\",\n    \"stake\",\n    \"stake_e8s\",\n    \"staked_e8s_buckets\",\n    \"staked_maturity_e8s\",\n    \"staked_maturity_e8s_equivalent\",\n    \"staked_maturity_e8s_equivalent_buckets\",\n    \"standard_deviation\",\n    \"start\",\n    \"start_as_nns\",\n    \"start_at_timestamp_nanos\",\n    \"start_canister\",\n    \"start_page_at\",\n    \"start_reducing_voting_power_after_seconds\",\n    \"start_time\",\n    \"start_timestamp_seconds\",\n    \"starting_at\",\n    \"state\",\n    \"state_hash\",\n    \"stats\",\n    \"status\",\n    \"status_code\",\n    \"status_text\",\n    \"steps\",\n    \"stop\",\n    \"stop_before_installing\",\n    \"stop_canister\",\n    \"stop_or_start_nns_canister\",\n    \"stop_upgrade_start\",\n    \"storage_layout_version\",\n    \"store\",\n    \"store_accounts\",\n    \"store_canister\",\n    \"store_canister_id\",\n    \"store_icrc1_canister\",\n    \"store_member\",\n    \"store_new_icrc1_canisters\",\n    \"store_passkey\",\n    \"store_transaction\",\n    \"stored_chunks\",\n    \"streaming_strategy\",\n    \"sub\",\n    \"subaccount\",\n    \"submit_ciphertexts\",\n    \"submit_proposal\",\n    \"submitted_at\",\n    \"subnet\",\n    \"subnet_id\",\n    \"subnet_id_override\",\n    \"subnet_selection\",\n    \"subnet_type\",\n    \"subtype\",\n    \"success\",\n    \"successfully_transferred_neurons\",\n    \"summary\",\n    \"superpowers\",\n    \"supportedInterfacesDip721\",\n    \"supported_ckerc20_tokens\",\n    \"suspended_utxo\",\n    \"suspended_utxos\",\n    \"swap\",\n    \"swap_background_information\",\n    \"swap_canister_id\",\n    \"swap_canister_summary\",\n    \"swap_distribution\",\n    \"swap_due_timestamp_seconds\",\n    \"swap_neurons\",\n    \"swap_parameters\",\n    \"swap_participation_limits\",\n    \"swap_provider\",\n    \"swap_start_timestamp_seconds\",\n    \"swap_wasm_hash\",\n    \"sweep_icp_result\",\n    \"sweep_sns_result\",\n    \"symbol\",\n    \"symbolDip721\",\n    \"symmetric_key_verification_key_for_note\",\n    \"sync_controllers\",\n    \"sync_recovery_phrase_from_internet_identity\",\n    \"system_params\",\n    \"take\",\n    \"take_ownership\",\n    \"target_amount\",\n    \"target_canister\",\n    \"target_canister_id\",\n    \"target_ledger\",\n    \"target_method_name\",\n    \"target_neuron\",\n    \"target_neuron_info\",\n    \"target_subnet_id\",\n    \"target_swap_canister_id\",\n    \"target_version\",\n    \"targets\",\n    \"tentative_device\",\n    \"test\",\n    \"testflight\",\n    \"threshold_pct\",\n    \"threshold_policy\",\n    \"ticket\",\n    \"ticket_id\",\n    \"time\",\n    \"timeMillis\",\n    \"timeNanos\",\n    \"time_ns\",\n    \"time_per_token_ns\",\n    \"time_window_seconds\",\n    \"timers\",\n    \"timestamp\",\n    \"timestamp_nanos\",\n    \"timestamp_of_disbursement_seconds\",\n    \"timestamp_seconds\",\n    \"tip_block_hash\",\n    \"tip_height\",\n    \"title\",\n    \"to\",\n    \"toAmount\",\n    \"to_account\",\n    \"to_account_identifier\",\n    \"to_canister\",\n    \"to_claim_transfers\",\n    \"to_direct_participation_icp_e8s\",\n    \"to_principal\",\n    \"to_spender\",\n    \"to_subaccount\",\n    \"toggle_trap\",\n    \"token\",\n    \"tokenTransferNotification\",\n    \"token_created\",\n    \"token_id\",\n    \"token_logo\",\n    \"token_name\",\n    \"token_refresh_ttl\",\n    \"token_symbol\",\n    \"token_ttl\",\n    \"tokens\",\n    \"top\",\n    \"topic\",\n    \"topic_followee_index\",\n    \"topic_followees\",\n    \"topic_following\",\n    \"topic_id_to_followees\",\n    \"topics\",\n    \"total\",\n    \"totalSupplyDip721\",\n    \"total_available_e8s_equivalent\",\n    \"total_deciding_voting_power\",\n    \"total_direct_contribution_icp_e8s\",\n    \"total_direct_participation_icp_e8s\",\n    \"total_e8s\",\n    \"total_length\",\n    \"total_locked_e8s\",\n    \"total_maturity_e8s_equivalent\",\n    \"total_maturity_equivalent_icp_e8s\",\n    \"total_neurons_fund_contribution_icp_e8s\",\n    \"total_neurons_fund_participation_icp_e8s\",\n    \"total_num_changes\",\n    \"total_pages_available\",\n    \"total_potential_voting_power\",\n    \"total_staked_e8s\",\n    \"total_staked_e8s_ect\",\n    \"total_staked_e8s_non_self_authenticating_controller\",\n    \"total_staked_e8s_seed\",\n    \"total_staked_maturity_e8s_equivalent\",\n    \"total_staked_maturity_e8s_equivalent_ect\",\n    \"total_staked_maturity_e8s_equivalent_seed\",\n    \"total_supply_governance_tokens\",\n    \"total_supply_icp\",\n    \"total_voting_power\",\n    \"total_voting_power_non_self_authenticating_controller\",\n    \"track_localhost\",\n    \"transaction\",\n    \"transaction_count\",\n    \"transaction_fee\",\n    \"transaction_fee_e8s\",\n    \"transaction_hash\",\n    \"transaction_id\",\n    \"transaction_receipt\",\n    \"transaction_type\",\n    \"transaction_window\",\n    \"transactions\",\n    \"transfer\",\n    \"transferFromDip721\",\n    \"transferFromNotifyDip721\",\n    \"transfer_block_height\",\n    \"transfer_fee\",\n    \"transfer_fee_paid_e8s\",\n    \"transfer_gtc_neuron\",\n    \"transfer_id\",\n    \"transfer_nfid_id\",\n    \"transfer_start_timestamp_seconds\",\n    \"transfer_success_timestamp_seconds\",\n    \"transfer_timestamp\",\n    \"transform\",\n    \"transform1\",\n    \"transform2\",\n    \"transform3\",\n    \"transport_public_key\",\n    \"transport_tls_cert\",\n    \"trap_query\",\n    \"trap_update\",\n    \"treasury_distribution\",\n    \"tree\",\n    \"trigger_threshold\",\n    \"truckType\",\n    \"trusted_origins\",\n    \"tuple\",\n    \"txid\",\n    \"txid_to_bytes\",\n    \"uid\",\n    \"uncategorized_functions\",\n    \"uninstall_code\",\n    \"unit_delay_millis\",\n    \"unreachable\",\n    \"unset_asset_content\",\n    \"upToTimeNanos\",\n    \"update\",\n    \"updateCalls\",\n    \"updateMerchant\",\n    \"updateRegistration\",\n    \"update_2fa\",\n    \"update_access_point\",\n    \"update_account\",\n    \"update_allowed_principals\",\n    \"update_allowed_principals_result\",\n    \"update_alternative_origins\",\n    \"update_api_boundary_nodes_version\",\n    \"update_balance\",\n    \"update_canister_list\",\n    \"update_canister_settings\",\n    \"update_device\",\n    \"update_elected_hostos_versions\",\n    \"update_firewall_rules\",\n    \"update_neuron\",\n    \"update_node_directly\",\n    \"update_node_domain_directly\",\n    \"update_node_ipv4_config_directly\",\n    \"update_node_operator_config\",\n    \"update_node_operator_config_directly\",\n    \"update_node_provider\",\n    \"update_node_rewards_table\",\n    \"update_nodes_hostos_version\",\n    \"update_note\",\n    \"update_period\",\n    \"update_policy\",\n    \"update_settings\",\n    \"update_sns_subnet_list\",\n    \"update_ssh_readonly_access_for_all_unassigned_nodes\",\n    \"update_subnet\",\n    \"update_system_params\",\n    \"update_trusted_origins\",\n    \"update_trusted_origins_raw\",\n    \"update_unassigned_nodes_config\",\n    \"update_vault\",\n    \"update_wallet\",\n    \"updated_at_timestamp_seconds\",\n    \"upgrade\",\n    \"upgrade_journal\",\n    \"upgrade_journal_entry_count\",\n    \"upgrade_path\",\n    \"upgrade_root\",\n    \"upgrade_root_settings\",\n    \"upgrade_steps\",\n    \"uploadCertificate\",\n    \"upload_chunk\",\n    \"upload_index_wasm\",\n    \"upload_worker_wasm\",\n    \"url\",\n    \"use\",\n    \"use_access_point\",\n    \"use_registry_derived_rewards\",\n    \"user\",\n    \"userAge\",\n    \"userName\",\n    \"userPublicKey\",\n    \"user_id\",\n    \"user_limit\",\n    \"user_name\",\n    \"user_number\",\n    \"user_preferences\",\n    \"user_uuid\",\n    \"users\",\n    \"users_registered\",\n    \"utc_offset_minutes\",\n    \"utxo\",\n    \"utxos\",\n    \"uuid\",\n    \"v0\",\n    \"val\",\n    \"validate_commit_proposed_batch\",\n    \"validate_configure\",\n    \"validate_grant_permission\",\n    \"validate_revoke_permission\",\n    \"validate_take_ownership\",\n    \"validator_canister_id\",\n    \"validator_method_name\",\n    \"valuation\",\n    \"valuation_factors\",\n    \"value\",\n    \"vault\",\n    \"vault_id\",\n    \"vaults\",\n    \"vc_consent_message\",\n    \"verification_code\",\n    \"verify\",\n    \"verify_tentative_device\",\n    \"version\",\n    \"vesting_period\",\n    \"vesting_period_seconds\",\n    \"vetkd_derive_key\",\n    \"vetkd_public_key\",\n    \"visibility\",\n    \"vote\",\n    \"voters\",\n    \"votes_no\",\n    \"votes_yes\",\n    \"voting_power\",\n    \"voting_power_buckets\",\n    \"voting_power_economics\",\n    \"voting_power_percentage_multiplier\",\n    \"voting_power_refreshed_timestamp_seconds\",\n    \"voting_reward_parameters\",\n    \"voting_rewards_parameters\",\n    \"vout\",\n    \"wait\",\n    \"wait_for_quiet_deadline_increase_seconds\",\n    \"wait_for_quiet_state\",\n    \"wait_for_quiet_threshold_seconds\",\n    \"wallet\",\n    \"wallet_api_version\",\n    \"wallet_balance\",\n    \"wallet_balance128\",\n    \"wallet_call\",\n    \"wallet_call128\",\n    \"wallet_call_with_max_cycles\",\n    \"wallet_create_canister\",\n    \"wallet_create_canister128\",\n    \"wallet_create_wallet\",\n    \"wallet_create_wallet128\",\n    \"wallet_id\",\n    \"wallet_receive\",\n    \"wallet_send\",\n    \"wallet_send128\",\n    \"wallet_store_wallet_wasm\",\n    \"wallets\",\n    \"wasm\",\n    \"wasm_memory_limit\",\n    \"wasm_memory_threshold\",\n    \"wasm_module\",\n    \"wasm_module_hash\",\n    \"wasm_module_size\",\n    \"webauthn\",\n    \"which_am_i\",\n    \"whitelisted_canisters\",\n    \"whitelisted_phone_numbers\",\n    \"whoami\",\n    \"whoami_query\",\n    \"whois\",\n    \"withdraw\",\n    \"withdraw_erc20\",\n    \"withdraw_eth\",\n    \"withdrawal_amount\",\n    \"withdrawal_id\",\n    \"withdrawal_status\",\n    \"witness\",\n    \"write\",\n    \"write_entry\",\n    \"wrong_code\",\n    \"xdr_conversion_rate\",\n    \"xdr_permyriad_per_icp\",\n    \"xdr_permyriad_per_node_per_month\",\n    \"xdrs_per_icp\",\n    \"xnet_endpoint\",\n    \"xrc_id\",\n    \"yes\"\n];\nexport const fieldNames = createNameLookup(candidFieldNames);\n", "export function uint8ArrayToHex(array) {\n    return Array.from(array)\n        .map((byte) => byte.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\nexport function base64decode(base64) {\n    const bin = atob(base64);\n    const bytes = Uint8Array.from(bin, (c) => c.charCodeAt(0));\n    return bytes;\n}\nexport function base64encode(bytes) {\n    let binary = \"\";\n    for (let i = 0; i < bytes.length; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\nexport const JSONstringify = (obj, indent) => {\n    return JSON.stringify(obj, jsonBigintReplacer, indent);\n};\nexport const jsonBigintReplacer = (key, value) => {\n    if (typeof value === \"bigint\") {\n        return value.toString();\n    }\n    return value;\n};\n", "// candid.ts\n// Import the decodeCandid function from candidDecoder.ts.\n// Make sure candidDecoder.ts is in the same directory or accessible via this path.\nimport { decodeCandid, DecodeResult } from \"../dist/esm/candidDecoder.js\";\nimport { fieldNames } from \"../dist/esm/candidFieldNames.js\";\nimport { JSONstringify } from \"../dist/esm/utils.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // --- DOM Elements ---\n  const unifiedInput = document.getElementById(\n    \"unifiedInput\",\n  ) as HTMLTextAreaElement;\n  const hexOutput = document.getElementById(\"hexOutput\") as HTMLTextAreaElement;\n  const escapedStringOutput = document.getElementById(\n    \"escapedStringOutput\",\n  ) as HTMLTextAreaElement;\n  const base64Output = document.getElementById(\n    \"base64Output\",\n  ) as HTMLTextAreaElement;\n  const arrayOutput = document.getElementById(\n    \"arrayOutput\",\n  ) as HTMLTextAreaElement;\n  const hexArrayOutput = document.getElementById(\n    \"hexArrayOutput\",\n  ) as HTMLTextAreaElement;\n  const resultContainer = document.getElementById(\n    \"resultContainer\",\n  ) as HTMLDivElement;\n\n  /**\n   * Copies the content of a textarea to the clipboard and provides visual feedback.\n   * @param textarea The textarea element to copy from.\n   */\n  function copyToClipboard(textarea: HTMLTextAreaElement) {\n    if (!textarea.value) return; // Don't copy if there's nothing to copy\n\n    const feedbackElement = document.getElementById(`${textarea.id}-feedback`);\n\n    navigator.clipboard\n      .writeText(textarea.value)\n      .then(() => {\n        // Provide visual feedback\n        textarea.classList.add(\"copied\");\n        if (feedbackElement) {\n          feedbackElement.textContent = \"Copied!\";\n        }\n\n        // Reset the visual feedback after a short delay\n        setTimeout(() => {\n          textarea.classList.remove(\"copied\");\n          if (feedbackElement) {\n            feedbackElement.textContent = \"\";\n          }\n        }, 1500); // 1.5 seconds\n      })\n      .catch((err) => {\n        console.error(\"Failed to copy text: \", err);\n        // Optionally, provide error feedback to the user\n        if (feedbackElement) {\n          feedbackElement.textContent = \"Failed to copy!\";\n        }\n        setTimeout(() => {\n          if (feedbackElement) {\n            feedbackElement.textContent = \"\";\n          }\n        }, 2000);\n      });\n  }\n\n  /**\n   * Converts a string containing byte escape sequences (e.g., '\\02', '\\6b')\n   * into a pure hexadecimal string.\n   * @param inputString The string with escape sequences.\n   * @returns The resulting hexadecimal string.\n   */\n  function convertEscapedStringToHex(inputString: string): string {\n    let hexResult = \"\";\n    const encoder = new TextEncoder(); // Used for accurate UTF-8 byte representation\n\n    for (let i = 0; i < inputString.length; i++) {\n      const char = inputString[i];\n      if (char === \"\\\\\" && i + 2 < inputString.length) {\n        // Check if it's a two-character hex escape sequence like \\XX\n        const hexChars = inputString.substring(i + 1, i + 3);\n        // Ensure the next two characters are valid hex digits\n        if (/^[0-9a-fA-F]{2}$/.test(hexChars)) {\n          // This is a byte escape sequence, append the hex characters directly\n          hexResult += hexChars.toUpperCase();\n          i += 2; // Skip the two hex characters after '\\'\n        } else {\n          // Not a valid hex escape sequence, treat '\\' as a literal character\n          // Convert '\\' to its UTF-8 hex byte representation\n          const encodedBytes = encoder.encode(char);\n          for (const byte of encodedBytes) {\n            hexResult += byte.toString(16).padStart(2, \"0\").toUpperCase();\n          }\n        }\n      } else {\n        // For all other characters (including non-escape sequences and valid '\\' characters),\n        // get their UTF-8 byte representation and convert to hex.\n        const encodedBytes = encoder.encode(char);\n        for (const byte of encodedBytes) {\n          hexResult += byte.toString(16).padStart(2, \"0\").toUpperCase();\n        }\n      }\n    }\n    return hexResult;\n  }\n\n  /**\n   * Converts a hex string to an escaped string.\n   * @param hexString The hex string to convert.\n   * @returns The escaped string.\n   */\n  function convertHexToEscapedString(hexString: string): string {\n    let escapedString = \"\";\n    for (let i = 0; i < hexString.length; i += 2) {\n      const byte = parseInt(hexString.substring(i, i + 2), 16);\n      if (byte >= 32 && byte <= 126 && byte !== 92) {\n        // Printable ASCII character (excluding backslash)\n        escapedString += String.fromCharCode(byte);\n      } else {\n        // Non-printable or backslash, convert to \\xXX escape sequence\n        escapedString += `\\\\${byte.toString(16).padStart(2, \"0\").toLowerCase()}`;\n      }\n    }\n    return escapedString;\n  }\n\n  /**\n   * Converts a hex string to a Base64 string.\n   * @param hexString The hex string to convert.\n   * @returns The Base64 string.\n   */\n  function convertHexToBase64(hexString: string): string {\n    if (hexString.length === 0) return \"\";\n    const bytes = new Uint8Array(hexString.length / 2);\n    for (let i = 0; i < hexString.length; i += 2) {\n      bytes[i / 2] = parseInt(hexString.substring(i, i + 2), 16);\n    }\n    return btoa(String.fromCharCode(...bytes));\n  }\n\n  /**\n   * Converts a hex string to an array representation.\n   * @param hexString The hex string to convert.\n   * @returns The array representation string.\n   */\n  function convertHexToArray(hexString: string): string {\n    if (hexString.length === 0) return \"[]\";\n    const bytes: number[] = [];\n    for (let i = 0; i < hexString.length; i += 2) {\n      bytes.push(parseInt(hexString.substring(i, i + 2), 16));\n    }\n    return `[${bytes.join(\", \")}]`;\n  }\n\n  /**\n   * Converts a hex string to a hex array representation.\n   * @param hexString The hex string to convert.\n   * @returns The hex array representation string.\n   */\n  function convertHexToHexArray(hexString: string): string {\n    if (hexString.length === 0) return \"[]\";\n    const hexBytes: string[] = [];\n    for (let i = 0; i < hexString.length; i += 2) {\n      hexBytes.push(\"0x\" + hexString.substring(i, i + 2).toUpperCase());\n    }\n    return `[${hexBytes.join(\", \")}]`;\n  }\n\n  /**\n   * Converts a Base64 string to a hex string.\n   * @param base64String The Base64 string to convert.\n   * @returns The hex string.\n   */\n  function convertBase64ToHex(base64String: string): string {\n    if (base64String.length === 0) return \"\";\n    try {\n      const binaryString = atob(base64String);\n      let hexResult = \"\";\n      for (let i = 0; i < binaryString.length; i++) {\n        const byte = binaryString.charCodeAt(i);\n        hexResult += byte.toString(16).padStart(2, \"0\").toUpperCase();\n      }\n      return hexResult;\n    } catch (e) {\n      console.error(\"Invalid Base64 string:\", e);\n      return \"\"; // Return empty string or handle error appropriately\n    }\n  }\n\n  /**\n   * Detects the input type (Hex, Escaped String, or Base64) and converts it to hex.\n   * @param input The raw user input.\n   * @returns The converted hex string, or null if the format is unrecognized.\n   */\n  function determineAndConvertToHex(input: string): string | null {\n    const trimmedInput = input.trim();\n    if (trimmedInput.length === 0) return null;\n\n    // 1. Check for Array representation (e.g., [1, 2, 0x34])\n    if (trimmedInput.startsWith(\"[\") && trimmedInput.endsWith(\"]\")) {\n      try {\n        const arrayContent = trimmedInput.substring(1, trimmedInput.length - 1);\n        const byteStrings = arrayContent.split(\",\").map((s) => s.trim());\n        let hexResult = \"\";\n        for (const byteStr of byteStrings) {\n          if (byteStr.length === 0) continue; // Skip empty strings from extra commas\n\n          let byteValue: number;\n          if (byteStr.startsWith(\"0x\") || byteStr.startsWith(\"0X\")) {\n            byteValue = parseInt(byteStr.substring(2), 16);\n          } else {\n            byteValue = parseInt(byteStr, 10);\n          }\n\n          if (isNaN(byteValue) || byteValue < 0 || byteValue > 255) {\n            throw new Error(`Invalid byte value in array: ${byteStr}`);\n          }\n          hexResult += byteValue.toString(16).padStart(2, \"0\").toUpperCase();\n        }\n        return hexResult;\n      } catch (e) {\n        console.error(\"Error parsing array input:\", e);\n        return null; // Invalid array format\n      }\n    }\n\n    // 2. Check for Hex String (even length, only hex characters)\n    if (/^[0-9a-fA-F]+$/.test(trimmedInput) && trimmedInput.length % 2 === 0) {\n      // Potentially a hex string. Check if it decodes cleanly from base64 first as a heuristic\n      // This is to differentiate hex from base64 that might *look* like hex\n      try {\n        const base64Decoded = atob(trimmedInput);\n        if (base64Decoded.length > 0 && trimmedInput.length % 4 === 0) {\n          // If it successfully decodes from base64 and is a valid base64 length,\n          // it's more likely base64.\n          // This is a heuristic, not foolproof.\n          // For now, prioritize hex detection if it strictly looks like hex.\n          // A more robust solution might involve trying both and seeing which one yields a valid Candid decode.\n        }\n      } catch (e) {\n        // Not valid base64, so it's more likely hex\n      }\n      return trimmedInput.toUpperCase(); // Assume it's hex if it passes the regex\n    }\n\n    // 3. Check for Escaped String (starts with \"DIDL\" or contains backslashes)\n    if (trimmedInput.startsWith(\"DIDL\") || trimmedInput.includes(\"\\\\\")) {\n      return convertEscapedStringToHex(trimmedInput);\n    }\n\n    // 4. Check for Base64 String (try decoding)\n    // Base64 strings usually have a length divisible by 4, and use A-Z, a-z, 0-9, +, /, =\n    if (\n      /^[A-Za-z0-9+/=]+$/.test(trimmedInput) &&\n      trimmedInput.length % 4 === 0\n    ) {\n      try {\n        const hex = convertBase64ToHex(trimmedInput);\n        // A simple check: if converting to hex results in a non-empty string, it's likely valid Base64\n        if (hex.length > 0) {\n          return hex;\n        }\n      } catch (e) {\n        // Not a valid Base64 string\n      }\n    }\n\n    // If none of the above, it's an unrecognized format or incomplete input.\n    return null;\n  }\n\n  /**\n   * Performs the Candid decoding given a hex string and displays the result.\n   * Also updates the hex, escaped string, and Base64 output fields.\n   * @param hexString The hex string to decode.\n   */\n  function processInput(input: string) {\n    let decodedResult: DecodeResult | null = null;\n    let hexToDecode: string | null = null;\n    let conversionError: string | null = null;\n\n    // Clear previous results container content\n    resultContainer.innerHTML = \"\";\n\n    if (input.trim().length === 0) {\n      displayEmptyInputMessage(); // Show specific message for empty input\n      return;\n    }\n\n    // Attempt to convert the input to hex\n    try {\n      hexToDecode = determineAndConvertToHex(input);\n      if (hexToDecode === null) {\n        conversionError =\n          \"Unrecognized input format. Please enter valid Hex, Escaped String, or Base64.\";\n      } else if (hexToDecode.length % 2 !== 0) {\n        conversionError =\n          \"Hex string has an odd number of characters. Each byte requires two hex characters.\";\n      } else if (!/^[0-9a-fA-F]*$/.test(hexToDecode)) {\n        conversionError = \"Invalid hex characters detected after conversion.\";\n      }\n    } catch (e: any) {\n      conversionError = `Error during input conversion: ${e.message || e}`;\n    }\n\n    if (conversionError) {\n      displayError(conversionError);\n      return;\n    }\n\n    // Populate conversion outputs if we have valid hexToDecode\n    if (hexToDecode) {\n      hexOutput.value = hexToDecode;\n      escapedStringOutput.value = convertHexToEscapedString(hexToDecode);\n      base64Output.value = convertHexToBase64(hexToDecode);\n      arrayOutput.value = convertHexToArray(hexToDecode);\n      hexArrayOutput.value = convertHexToHexArray(hexToDecode);\n    } else {\n      // This case should ideally be caught by conversionError, but as a fallback\n      displayError(\n        \"Could not convert input to a valid hex format for decoding.\",\n      );\n      return;\n    }\n\n    try {\n      const bytes = new Uint8Array(hexToDecode.length / 2);\n      for (let i = 0; i < hexToDecode.length; i += 2) {\n        const byteValue = parseInt(hexToDecode.substring(i, i + 2), 16);\n        if (isNaN(byteValue)) {\n          decodedResult = {\n            error: {\n              msg: `Invalid hex character sequence at position ${i}. Please use only 0-9, a-f, A-F.`,\n              index: i / 2,\n            },\n          };\n          displayResult(decodedResult);\n          return;\n        }\n        bytes[i / 2] = byteValue;\n      }\n\n      decodedResult = decodeCandid(bytes, fieldNames);\n      displayResult(decodedResult);\n    } catch (e: any) {\n      const error =\n        e instanceof Error\n          ? e.message\n          : \"An unknown error occurred in the UI logic.\";\n      decodedResult = {\n        error: {\n          msg: `An unexpected JavaScript error occurred in the UI: ${error}`,\n          index: 0,\n        },\n      };\n      displayResult(decodedResult);\n    }\n  }\n\n  /**\n   * Displays an error message in the result container.\n   * @param message The error message to display.\n   */\n  function displayError(message: string) {\n    resultContainer.innerHTML = \"\"; // Clear previous results\n    const errorDiv = document.createElement(\"div\");\n    errorDiv.className =\n      \"bg-red-100 border border-red-400 text-red-700 px-6 py-4 rounded-lg relative shadow-inner\";\n    errorDiv.innerHTML = `\n          <strong class=\"font-bold\">Error!</strong>\n          <span class=\"block sm:inline ml-2\">${message}</span>\n      `;\n    resultContainer.appendChild(errorDiv);\n  }\n\n  /**\n   * Displays a message when the input field is empty.\n   */\n  function displayEmptyInputMessage() {\n    resultContainer.innerHTML = \"\"; // Clear previous results\n    const messageDiv = document.createElement(\"div\");\n    messageDiv.className =\n      \"bg-blue-100 border border-blue-400 text-blue-700 px-6 py-4 rounded-lg relative shadow-inner\";\n    messageDiv.innerHTML = `\n          <p class=\"text-center\">Enter data (Hex, Escaped String, or Base64) to see the decoding result and conversions.</p>\n      `;\n    resultContainer.appendChild(messageDiv);\n  }\n\n  /**\n   * Renders the decoding result (decoded data or error) into the DOM.\n   * @param {DecodeResult} result - The result object from decodeCandid.\n   */\n  function displayResult(result: DecodeResult) {\n    resultContainer.innerHTML = \"\"; // Clear previous results\n\n    if (\"error\" in result) {\n      const errorDiv = document.createElement(\"div\");\n      errorDiv.className =\n        \"bg-red-100 border border-red-400 text-red-700 px-6 py-4 rounded-lg relative shadow-inner\";\n      errorDiv.innerHTML = `\n                <strong class=\"font-bold\">Error!</strong>\n                <span class=\"block sm:inline ml-2\">${result.error.msg}</span>\n                ${result.error.index !== null ? `<p class=\"mt-3 text-sm\">Error occurred at byte index: <code class=\"font-mono bg-red-200 px-2 py-1 rounded-md text-red-800\">${result.error.index}</code></p>` : \"\"}\n            `;\n      if (result.error.data !== undefined) {\n        const partialDataP = document.createElement(\"p\");\n        partialDataP.className = \"mt-4 font-semibold text-red-800\";\n        partialDataP.textContent = \"Partial Decoded Data (if any):\";\n        errorDiv.appendChild(partialDataP);\n\n        const pre = document.createElement(\"pre\");\n        pre.className =\n          \"bg-red-50 p-4 rounded-lg mt-2 text-sm overflow-auto max-h-60 border border-red-200\";\n        pre.textContent = JSONstringify(result.error.data, 2);\n        errorDiv.appendChild(pre);\n      }\n      resultContainer.appendChild(errorDiv);\n    } else if (\"ok\" in result) {\n      // Only display success if data is not null\n      const successDiv = document.createElement(\"div\");\n      successDiv.className =\n        \"bg-green-100 border border-green-400 text-green-700 px-6 py-4 rounded-lg relative shadow-inner\";\n      successDiv.innerHTML = `\n                <strong class=\"font-bold\">Success!</strong>\n                <span class=\"block sm:inline ml-2\">Candid data successfully decoded.</span>\n                <p class=\"mt-4 font-semibold text-green-800\">Decoded JSON:</p>\n            `;\n      const pre = document.createElement(\"pre\");\n      pre.className =\n        \"bg-green-50 p-4 rounded-lg mt-2 text-sm overflow-auto max-h-96 border border-green-200\";\n      pre.textContent = JSONstringify(result.ok, 2);\n      successDiv.appendChild(pre);\n      resultContainer.appendChild(successDiv);\n    }\n  }\n\n  // --- Event Listener for Unified Input ---\n  unifiedInput.addEventListener(\"input\", () => {\n    processInput(unifiedInput.value);\n  });\n\n  // --- Event Listeners for Copying ---\n  hexOutput.addEventListener(\"click\", () => copyToClipboard(hexOutput));\n  escapedStringOutput.addEventListener(\"click\", () =>\n    copyToClipboard(escapedStringOutput),\n  );\n  base64Output.addEventListener(\"click\", () => copyToClipboard(base64Output));\n  arrayOutput.addEventListener(\"click\", () => copyToClipboard(arrayOutput));\n  hexArrayOutput.addEventListener(\"click\", () => copyToClipboard(hexArrayOutput));\n\n  // Initial processing if there's any pre-filled value\n  if (unifiedInput.value) {\n    processInput(unifiedInput.value);\n  } else {\n    // If initially empty, display the empty input message\n    displayEmptyInputMessage();\n  }\n});\n"],
  "mappings": "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ACA,gBACA,0BACA,eACA,UACA,UACA,qBACA,QACA,mBACA,iBACA,uBACA,QACA,YACA,gBACA,YACA,YACA,4BACA,cACA,6BACA,UACA,kBACA,qBACA,0BACA,2BACA,iBACA,aACA,cACA,cACA,uBACA,0BACA,SACA,WACA,mBACA,mBACA,uBACA,YACA,UACA,MACA,QACA,eACA,sCACA,qBACA,UACA,kBACA,SACA,+BACA,uBACA,SACA,2BACA,uBACA,SACA,sBACA,yBACA,wBACA,0BACA,iCACA,wBACA,eACA,+BACA,OACA,QACA,qBACA,cACA,4BACA,wBACA,OACA,UACA,cACA,YACA,wBACA,oBACA,sBACA,MACA,WACA,wBACA,qBACA,iBACA,iBACA,qBACA,kBACA,eACA,qBACA,uBACA,oBACA,oBACA,eACA,qBACA,cACA,qBACA,eACA,mBACA,6BACA,yBACA,gCACA,yBACA,eACA,oBACA,MACA,OACA,oBACA,QACA,gBACA,mBACA,OACA,gBACA,SACA,gBACA,cACA,SACA,YACA,MACA,eACA,eACA,QACA,eACA,cACA,aACA,8BACA,SACA,WACA,uBACA,cACA,aACA,oBACA,OACA,kBACA,SACA,KACA,mBACA,QACA,OACA,UACA,uBACA,YACA,kBACA,WACA,SACA,qBACA,2BACA,cACA,0BACA,WACA,qBACA,WACA,wBACA,sBACA,eACA,aACA,4BACA,0BACA,qCACA,eACA,yBACA,0BACA,sBACA,mBACA,eACA,YACA,qBACA,sBACA,kBACA,iBACA,iBACA,UACA,OACA,UACA,MACA,oBACA,WACA,kBACA,qBACA,sBACA,uBACA,eACA,gCACA,8BACA,gBACA,oBACA,oBACA,eACA,QACA,QACA,yBACA,4BACA,yBACA,gBACA,kBACA,QACA,SACA,iBACA,sBACA,eACA,uBACA,aACA,YACA,SACA,UACA,cACA,qCACA,qBACA,gBACA,UACA,qBACA,qBACA,mBACA,yBACA,OACA,cACA,UACA,QACA,WACA,oBACA,oBACA,WACA,eACA,2BACA,yBACA,OACA,oBACA,cACA,cACA,UACA,UACA,SACA,WACA,eACA,sBACA,iBACA,kBACA,UACA,iBACA,aACA,oBACA,cACA,0BACA,4BACA,oBACA,yBACA,UACA,aACA,iBACA,+BACA,0BACA,kCACA,iBACA,wBACA,oBACA,gBACA,iBACA,WACA,gCACA,gBACA,YACA,gBACA,mBACA,gCACA,0BACA,cACA,eACA,gBACA,UACA,kBACA,sBACA,0BACA,qBACA,oCACA,yBACA,WACA,kCACA,sBACA,SACA,mBACA,eACA,2BACA,gDACA,MACA,sBACA,SACA,kBACA,UACA,cACA,YACA,yBACA,oBACA,aACA,iBACA,aACA,wDACA,eACA,qBACA,eACA,eACA,SACA,WACA,eACA,mBACA,WACA,oBACA,sBACA,WACA,wBACA,6BACA,uBACA,mBACA,WACA,WACA,mBACA,mBACA,oBACA,oCACA,UACA,yBACA,cACA,gCACA,uBACA,kBACA,SACA,MACA,YACA,QACA,+CACA,mBACA,YACA,gBACA,qBACA,kBACA,iCACA,gBACA,SACA,sBACA,uBACA,aACA,iBACA,oBACA,mBACA,6BACA,yBACA,mBACA,eACA,SACA,gBACA,WACA,UACA,cACA,gBACA,UACA,gBACA,sBACA,WACA,mBACA,uBACA,+BACA,iBACA,eACA,kBACA,oBACA,kBACA,wBACA,WACA,MACA,WACA,WACA,OACA,WACA,YACA,6BACA,eACA,aACA,kBACA,MACA,6BACA,cACA,eACA,mBACA,uBACA,gCACA,wBACA,4BACA,uCACA,sCACA,sBACA,uBACA,yCACA,gBACA,YACA,uBACA,8BACA,sBACA,uCACA,MACA,MACA,MACA,sBACA,qBACA,UACA,kBACA,UACA,MACA,kBACA,aACA,iCACA,gCACA,eACA,eACA,WACA,MACA,kBACA,UACA,SACA,sBACA,4BACA,sCACA,oBACA,0BACA,2BACA,WACA,aACA,gBACA,eACA,cACA,eACA,kBACA,oBACA,SACA,OACA,SACA,SACA,UACA,wBACA,cACA,WACA,OACA,aACA,mBACA,gBACA,QACA,kBACA,cACA,sBACA,SACA,eACA,KACA,IACA,gDACA,0BACA,uBACA,cACA,YACA,uBACA,WACA,SACA,QACA,cACA,WACA,iBACA,yBACA,qBACA,uBACA,gCACA,4BACA,gBACA,+BACA,cACA,qBACA,eACA,gBACA,eACA,uBACA,sBACA,sBACA,kBACA,0BACA,gBACA,uBACA,mBACA,YACA,mBACA,sBACA,iBACA,iBACA,qBACA,kBACA,yBACA,WACA,OACA,cACA,sBACA,iBACA,kBACA,aACA,uBACA,kBACA,aACA,WACA,mBACA,4BACA,2BACA,eACA,gBACA,SACA,yBACA,sBACA,kBACA,8BACA,qCACA,uBACA,sBACA,gBACA,eACA,2BACA,sBACA,QACA,aACA,gBACA,gBACA,YACA,aACA,oBACA,0BACA,wBACA,eACA,4BACA,kBACA,wBACA,oBACA,UACA,QACA,oBACA,YACA,wBACA,sBACA,4BACA,oBACA,uBACA,oBACA,0BACA,kBACA,QACA,oBACA,sBACA,gBACA,uCACA,qBACA,4BACA,UACA,iBACA,QACA,QACA,eACA,QACA,oBACA,gCACA,8BACA,YACA,OACA,kBACA,wBACA,OACA,UACA,UACA,UACA,SACA,eACA,cACA,wBACA,uBACA,gCACA,+CACA,kCACA,8BACA,qBACA,mBACA,cACA,SACA,YACA,oBACA,oBACA,gBACA,wBACA,kBACA,UACA,mBACA,iBACA,eACA,WACA,UACA,WACA,mBACA,6BACA,aACA,gBACA,2BACA,cACA,qBACA,qBACA,mDACA,QACA,gBACA,gBACA,wBACA,SACA,iBACA,qBACA,sBACA,iBACA,8DACA,eACA,eACA,eACA,kBACA,mBACA,eACA,gBACA,eACA,cACA,mCACA,gBACA,eACA,UACA,aACA,kBACA,eACA,oBACA,4BACA,WACA,gBACA,UACA,gBACA,iBACA,kBACA,kBACA,cACA,SACA,WACA,UACA,uBACA,wBACA,qCACA,mCACA,0BACA,kBACA,SACA,aACA,8BACA,mBACA,SACA,8BACA,4BACA,6BACA,4BACA,oBACA,0BACA,IACA,QACA,QACA,mBACA,oBACA,0BACA,iBACA,iCACA,QACA,OACA,sBACA,yBACA,iBACA,eACA,aACA,cACA,oBACA,QACA,6BACA,cACA,+CACA,sDACA,4BACA,wBACA,gCACA,WACA,+CACA,YACA,oBACA,aACA,cACA,SACA,aACA,eACA,eACA,kBACA,cACA,eACA,iBACA,qCACA,yCACA,4CACA,8BACA,iBACA,mBACA,mBACA,UACA,iBACA,eACA,kDACA,oBACA,kBACA,mBACA,UACA,+BACA,OACA,cACA,SACA,cACA,sBACA,qBACA,UACA,yBACA,oBACA,SACA,sBACA,8BACA,cACA,cACA,UACA,YACA,2BACA,+BACA,YACA,gCACA,iBACA,eACA,eACA,iBACA,0BACA,kCACA,yBACA,iBACA,6BACA,0BACA,wBACA,2BACA,mCACA,iCACA,qCACA,sCACA,4DACA,wDACA,6BACA,sBACA,yBACA,sBACA,WACA,SACA,iBACA,WACA,eACA,IACA,MACA,iBACA,eACA,YACA,iBACA,4BACA,2BACA,mBACA,YACA,mBACA,sBACA,4BACA,6BACA,0BACA,QACA,gBACA,sBACA,UACA,kBACA,SACA,YACA,gBACA,mCACA,iBACA,MACA,WACA,wBACA,iCACA,UACA,uBACA,sBACA,QACA,MACA,iBACA,iBACA,yBACA,gCACA,MACA,QACA,qBACA,aACA,gBACA,mBACA,aACA,aACA,SACA,0BACA,cACA,8BACA,mBACA,wBACA,4BACA,mBACA,QACA,qBACA,eACA,WACA,aACA,yBACA,gBACA,eACA,4BACA,6BACA,kCACA,mCACA,kCACA,mCACA,kBACA,gCACA,eACA,qBACA,gBACA,mBACA,aACA,WACA,WACA,aACA,UACA,qBACA,8BACA,8BACA,gBACA,cACA,IACA,iCACA,SACA,2BACA,6BACA,iBACA,UACA,iBACA,oCACA,gBACA,WACA,MACA,wBACA,kBACA,gBACA,oBACA,0BACA,QACA,WACA,SACA,mCACA,oBACA,iCACA,0CACA,gBACA,4BACA,OACA,kBACA,QACA,iBACA,oBACA,cACA,oBACA,YACA,YACA,gBACA,MACA,kBACA,yCACA,qBACA,OACA,aACA,WACA,YACA,gBACA,eACA,eACA,gBACA,0BACA,wBACA,oCACA,kBACA,gBACA,YACA,oBACA,eACA,mCACA,gDACA,WACA,cACA,gBACA,YACA,IACA,oCACA,YACA,WACA,kBACA,WACA,4BACA,MACA,iBACA,oBACA,aACA,cACA,gBACA,iBACA,WACA,gBACA,oBACA,WACA,gBACA,eACA,oBACA,UACA,cACA,cACA,oBACA,0BACA,WACA,YACA,eACA,kBACA,YACA,WACA,YACA,aACA,cACA,wBACA,2BACA,iCACA,sCACA,2BACA,wBACA,0BACA,eACA,yBACA,yBACA,qBACA,kBACA,4BACA,uBACA,+BACA,cACA,aACA,kBACA,qBACA,kBACA,mBACA,sBACA,wBACA,YACA,YACA,iBACA,aACA,oBACA,kBACA,iBACA,iBACA,uBACA,sBACA,iBACA,kCACA,yCACA,kBACA,oBACA,cACA,qBACA,cACA,aACA,gBACA,+BACA,4BACA,kBACA,sCACA,8BACA,sBACA,SACA,eACA,WACA,cACA,kBACA,SACA,mBACA,0BACA,gCACA,gBACA,8BACA,iCACA,0BACA,cACA,eACA,cACA,qBACA,kBACA,WACA,oCACA,gDACA,gCACA,mCACA,aACA,iBACA,kBACA,sCACA,8BACA,uBACA,8CACA,8BACA,yCACA,YACA,kBACA,wBACA,cACA,wBACA,wBACA,eACA,gBACA,2DACA,eACA,kCACA,oBACA,iBACA,sEACA,4BACA,2BACA,qBACA,iBACA,2BACA,0BACA,sBACA,WACA,4BACA,oCACA,qBACA,YACA,0BACA,8BACA,oBACA,aACA,kBACA,mBACA,sBACA,gCACA,UACA,uBACA,sBACA,qCACA,aACA,wBACA,cACA,WACA,oBACA,yBACA,OACA,aACA,kBACA,kBACA,uCACA,wBACA,2BACA,uBACA,kCACA,kCACA,iCACA,mCACA,aACA,yBACA,8BACA,mBACA,gBACA,wBACA,uBACA,MACA,mBACA,cACA,QACA,mBACA,oBACA,WACA,aACA,SACA,sCACA,IACA,qBACA,6BACA,mCACA,cACA,6BACA,cACA,gBACA,OACA,YACA,YACA,SACA,UACA,iBACA,YACA,SACA,oBACA,0BACA,6BACA,oBACA,WACA,SACA,mBACA,UACA,SACA,gBACA,eACA,kCACA,sBACA,gBACA,iBACA,iBACA,WACA,kBACA,OACA,MACA,iCACA,iCACA,yBACA,iBACA,QACA,yBACA,8BACA,6BACA,mBACA,iBACA,YACA,aACA,iBACA,wBACA,aACA,4BACA,eACA,qBACA,qBACA,iBACA,QACA,uCACA,yBACA,kBACA,gBACA,sBACA,qBACA,mBACA,4BACA,8BACA,KACA,SACA,WACA,UACA,iCACA,uCACA,sBACA,gBACA,4BACA,kBACA,oBACA,+BACA,8BACA,6BACA,8BACA,6BACA,mBACA,eACA,cACA,iBACA,cACA,MACA,gBACA,qBACA,MACA,QACA,QACA,WACA,cACA,sCACA,4BACA,2CACA,qCACA,yCACA,wBACA,iBACA,0BACA,iBACA,YACA,kBACA,QACA,oBACA,6BACA,WACA,kBACA,kBACA,OACA,mCACA,OACA,WACA,YACA,mBACA,iBACA,qCACA,8BACA,sBACA,mCACA,iBACA,0BACA,6BACA,iBACA,gCACA,qBACA,QACA,SACA,8BACA,uBACA,eACA,eACA,sBACA,YACA,eACA,8CACA,oBACA,UACA,mBACA,sBACA,WACA,UACA,cACA,gBACA,OACA,gBACA,gBACA,yBACA,WACA,qBACA,4BACA,aACA,gBACA,2BACA,YACA,cACA,eACA,0BACA,kCACA,YACA,oBACA,oBACA,kBACA,iBACA,cACA,YACA,aACA,iBACA,gCACA,YACA,MACA,SACA,6BACA,sBACA,0CACA,MACA,aACA,cACA,SACA,UACA,WACA,WACA,eACA,OACA,MACA,OACA,oBACA,gBACA,MACA,eACA,UACA,gBACA,eACA,QACA,SACA,aACA,WACA,OACA,aACA,+BACA,gBACA,sBACA,aACA,oDACA,kCACA,gCACA,wBACA,8BACA,6BACA,2BACA,+BACA,4BACA,iCACA,wBACA,aACA,uBACA,YACA,4BACA,sBACA,wCACA,eACA,OACA,SACA,oCACA,oBACA,qBACA,0BACA,8BACA,YACA,gCACA,kBACA,oBACA,+BACA,uBACA,mBACA,OACA,MACA,SACA,QACA,YACA,QACA,2BACA,QACA,iBACA,OACA,wBACA,gBACA,oBACA,YACA,gBACA,iBACA,kBACA,mCACA,sBACA,2BACA,qBACA,yBACA,gCACA,eACA,6BACA,sBACA,iBACA,iBACA,qBACA,0BACA,mBACA,cACA,qBACA,YACA,aACA,iBACA,OACA,aACA,YACA,SACA,OACA,cACA,cACA,eACA,sBACA,gCACA,uBACA,gBACA,qBACA,oBACA,qCACA,yBACA,yBACA,qCACA,eACA,0BACA,kCACA,8BACA,sBACA,+BACA,wDACA,MACA,UACA,2BACA,8BACA,gCACA,cACA,yBACA,YACA,iBACA,oBACA,aACA,iBACA,mCACA,sCACA,6BACA,gBACA,uBACA,UACA,kBACA,6BACA,cACA,wBACA,gCACA,iCACA,iBACA,kBACA,wBACA,yBACA,+BACA,uCACA,yCACA,8CACA,oCACA,0BACA,wBACA,sCACA,uCACA,0BACA,2BACA,mCACA,kCACA,iBACA,qBACA,cACA,uBACA,wDACA,0BACA,aACA,sBACA,gCACA,wBACA,mCACA,cACA,uBACA,oCACA,6BACA,0BACA,mBACA,UACA,OACA,oBACA,cACA,kBACA,sBACA,mBACA,UACA,kBACA,eACA,eACA,WACA,eACA,WACA,gBACA,gBACA,SACA,cACA,UACA,oBACA,kBACA,aACA,MACA,8BACA,oBACA,mCACA,6CACA,cACA,0BACA,mBACA,mCACA,cACA,uBACA,0BACA,uBACA,4BACA,gCACA,sCACA,kCACA,OACA,aACA,mBACA,cACA,YACA,SACA,gBACA,iBACA,YACA,kBACA,qBACA,OACA,WACA,gBACA,aACA,cACA,sBACA,4CACA,cACA,IACA,OACA,aACA,QACA,mBACA,UACA,mBACA,oBACA,wCACA,6BACA,kBACA,+BACA,YACA,0BACA,aACA,2BACA,eACA,yCACA,0CACA,2BACA,mCACA,gCACA,sCACA,wCACA,gDACA,uBACA,2BACA,iBACA,sCACA,mBACA,qBACA,cACA,UACA,0BACA,oBACA,yBACA,8BACA,kDACA,+BACA,6BACA,6BACA,yCACA,qCACA,uBACA,wBACA,oCACA,mCACA,uDACA,qDACA,oBACA,yBACA,iBACA,kBACA,aACA,cACA,cACA,mBACA,aACA,kBACA,gBACA,aACA,qBACA,WACA,aACA,OACA,YACA,YACA,iBACA,aACA,yBACA,eACA,+BACA,gCACA,eACA,6BACA,wBACA,qBACA,gBACA,kBACA,KACA,iBACA,UACA,WACA,eACA,kBACA,6BACA,eACA,uBACA,6BACA,mBACA,6BACA,qCACA,2BACA,gBACA,mBACA,6BACA,iBACA,mBACA,kBACA,2DACA,QACA,+BACA,uCACA,qCACA,yCACA,0CACA,gEACA,4DACA,iBACA,yBACA,aACA,qBACA,yBACA,gBACA,2BACA,4BACA,oBACA,wBACA,mBACA,kBACA,yBACA,mCACA,wBACA,mBACA,oBACA,IACA,eACA,SACA,KACA,aACA,qBACA,WACA,eACA,oBACA,mBACA,wCACA,MACA,kCACA,mBACA,wBACA,2BACA,qBACA,gBACA,YACA,iBACA,aACA,WACA,SACA,wDACA,WACA,aACA,QACA,gBACA,IACA,qBACA,QACA,OACA,UACA,YACA,WACA,OACA,cACA,YACA,QACA,OACA,iBACA,aACA,SACA,cACA,cACA,iBACA,eACA,gBACA,yBACA,UACA,qBACA,yBACA,UACA,WACA,gBACA,kBACA,yBACA,sBACA,sBACA,sBACA,aACA,kBACA,cACA,qBACA,wBACA,aACA,eACA,WACA,2BACA,QACA,sBACA,eACA,aACA,aACA,WACA,YACA,cACA,sBACA,QACA,YACA,cACA,yBACA,iCACA,sCACA,cACA,gBACA,UACA,oBACA,6BACA,qBACA,qBACA,mBACA,mBACA,iBACA,eACA,2BACA,QACA,eACA,aACA,wBACA,4CACA,8CACA,YACA,aACA,YACA,WACA,8BACA,WACA,sCACA,cACA,gBACA,iCACA,2BACA,yBACA,8BACA,6BACA,0BACA,4CACA,YACA,uBACA,WACA,cACA,aACA,WACA,0CACA,8BACA,4BACA,SACA,UACA,SACA,qBACA,aACA,+BACA,0DACA,mCACA,UACA,uBACA,kCACA,WACA,aACA,eACA,uBACA,cACA,YACA,cACA,kCACA,iCACA,YACA,SACA,OACA,WACA,kBACA,OACA,YACA,qBACA,oBACA,gBACA,aACA,SACA,6BACA,2BACA,WACA,cACA,iBACA,WACA,iBACA,iBACA,YACA,oBACA,iBACA,yBACA,uBACA,mBACA,qCACA,mCACA,uBACA,+BACA,sBACA,SACA,gBACA,aACA,iBACA,SACA,WACA,kBACA,yBACA,0BACA,kBACA,kBACA,sBACA,uBACA,iBACA,kBACA,aACA,4BACA,0BACA,iCACA,+BACA,qBACA,mBACA,UACA,oBACA,4BACA,sBACA,wBACA,kBACA,eACA,gBACA,iBACA,kBACA,6BACA,uBACA,gBACA,qBACA,SACA,qBACA,aACA,sBACA,iBACA,8BACA,iBACA,4BACA,oBACA,oBACA,gBACA,wBACA,wBACA,uBACA,wBACA,eACA,2BACA,2BACA,iBACA,cACA,cACA,qBACA,qBACA,+BACA,UACA,iBACA,0BACA,uBACA,oBACA,kBACA,qBACA,2BACA,8BACA,iBACA,UACA,8BACA,kBACA,4CACA,8BACA,WACA,yBACA,0BACA,0BACA,kBACA,wBACA,eACA,QACA,gBACA,eACA,WACA,+BACA,6BACA,mBACA,wBACA,0BACA,uBACA,SACA,4BACA,eACA,+CACA,eACA,0BACA,0BACA,sBACA,yBACA,oCACA,6BACA,sBACA,iCACA,SACA,gBACA,kCACA,iCACA,kCACA,oBACA,UACA,WACA,iBACA,6BACA,qCACA,qBACA,cACA,kCACA,0CACA,gBACA,mBACA,UACA,QACA,qBACA,OACA,OACA,iBACA,sBACA,mBACA,wBACA,iBACA,QACA,yBACA,iCACA,OACA,yBACA,kBACA,6BACA,gBACA,iCACA,kBACA,2BACA,gBACA,yBACA,uBACA,UACA,WACA,QACA,eACA,gBACA,qBACA,YACA,eACA,yBACA,+BACA,qBACA,OACA,2BACA,UACA,0CACA,WACA,iCACA,iBACA,qBACA,QACA,QACA,UACA,6BACA,OACA,WACA,oBACA,OACA,oBACA,OACA,gBACA,aACA,WACA,WACA,iBACA,SACA,0BACA,mBACA,kBACA,mBACA,4BACA,UACA,MACA,0BACA,mBACA,gBACA,0BACA,cACA,oBACA,uBACA,iBACA,gBACA,uBACA,mCACA,wBACA,sBACA,sBACA,+BACA,SACA,cACA,mBACA,WACA,WACA,uBACA,WACA,0BACA,eACA,kBACA,iBACA,aACA,iBACA,WACA,sCACA,6CACA,oCACA,2CACA,oBACA,eACA,cACA,SACA,8BACA,uBACA,OACA,eACA,OACA,kBACA,oBACA,YACA,+BACA,oBACA,kBACA,SACA,yBACA,mBACA,kCACA,UACA,oBACA,kBACA,yBACA,MACA,gCACA,6BACA,mBACA,gCACA,yBACA,eACA,qBACA,uBACA,iBACA,wBACA,2BACA,gBACA,2BACA,qBACA,WACA,gBACA,gBACA,gBACA,mBACA,qBACA,uBACA,sBACA,gBACA,kBACA,iBACA,6BACA,mBACA,eACA,UACA,qBACA,oBACA,sBACA,oBACA,qBACA,aACA,QACA,QACA,YACA,qBACA,sBACA,iCACA,yCACA,qBACA,QACA,eACA,2BACA,iBACA,gBACA,4CACA,aACA,0BACA,cACA,QACA,aACA,QACA,SACA,cACA,cACA,QACA,OACA,yBACA,gBACA,6BACA,qBACA,yBACA,QACA,iBACA,iBACA,oBACA,uBACA,eACA,4BACA,gBACA,oBACA,gBACA,qBACA,MACA,aACA,qBACA,kBACA,eACA,SACA,YACA,qBACA,mBACA,cACA,UACA,UACA,mCACA,UACA,cACA,4BACA,2BACA,iBACA,kBACA,OACA,8BACA,mBACA,wBACA,oBACA,6BACA,eACA,kBACA,4BACA,gBACA,+BACA,iBACA,mBACA,mBACA,SACA,eACA,0CACA,mBACA,8CACA,gBACA,OACA,iBACA,gBACA,kBACA,qBACA,gBACA,qBACA,gBACA,qBACA,mBACA,0BACA,iBACA,UACA,mBACA,OACA,aACA,gBACA,mBACA,SACA,YACA,OACA,aACA,YACA,UACA,oBACA,sBACA,SACA,YACA,kBACA,oCACA,oBACA,iBACA,aACA,QACA,KACA,WACA,aACA,wBACA,cACA,qBACA,kCACA,eACA,aACA,gBACA,cACA,QACA,4BACA,gBACA,WACA,aACA,aACA,oBACA,eACA,YACA,SACA,MACA,QACA,uBACA,kBACA,kBACA,wBACA,SACA,QACA,oBACA,iCACA,8BACA,oCACA,qCACA,YACA,eACA,mBACA,gCACA,oCACA,0CACA,2CACA,oBACA,wBACA,+BACA,mBACA,uBACA,sDACA,wBACA,uCACA,2CACA,4CACA,iCACA,mBACA,qBACA,wDACA,kBACA,cACA,oBACA,kBACA,sBACA,mBACA,iBACA,sBACA,mBACA,qBACA,eACA,WACA,qBACA,2BACA,wBACA,eACA,wBACA,sBACA,cACA,mBACA,mCACA,qCACA,qBACA,YACA,aACA,aACA,aACA,uBACA,qBACA,aACA,cACA,wBACA,OACA,oBACA,YACA,kBACA,QACA,OACA,gBACA,MACA,0BACA,iBACA,oBACA,cACA,sBACA,gBACA,SACA,cACA,iBACA,qBACA,aACA,sBACA,iBACA,4BACA,mCACA,6BACA,oCACA,iBACA,uBACA,2BACA,gBACA,iCACA,wBACA,gBACA,uBACA,8BACA,mCACA,8BACA,uCACA,uBACA,4BACA,8BACA,cACA,gBACA,gBACA,kBACA,yBACA,sDACA,gBACA,uBACA,yBACA,6BACA,iCACA,eACA,gBACA,+BACA,UACA,kBACA,8BACA,eACA,eACA,wBACA,gBACA,oBACA,eACA,oBACA,qBACA,MACA,MACA,mBACA,+BACA,OACA,UACA,WACA,gBACA,UACA,aACA,YACA,cACA,mBACA,YACA,QACA,mBACA,qBACA,OACA,QACA,OACA,KACA,MACA,iCACA,qBACA,4BACA,6BACA,0BACA,wBACA,wBACA,YACA,oBACA,QACA,QACA,WACA,SACA,qBACA,oBACA,SACA,0BACA,UACA,iBACA,yBACA,mBACA,mBACA,aACA,OACA,SACA,WACA,YACA,eACA,uBACA,yBACA,qCACA,2CACA,2BACA,4BACA,OACA,OACA,2CACA,uBACA,mCACA,SACA,qBACA,iBACA,oBACA,cACA,iBACA,8BACA,yBACA,4BACA,uBACA,0BACA,YACA,iBACA,cACA,iBACA,2BACA,UACA,OACA,oBACA,wBACA,cACA,mBACA,mBACA,WACA,aACA,wBACA,4BACA,SACA,eACA,QACA,WACA,iBACA,eACA,oBACA,gBACA,oBACA,UACA,QACA,cACA,aACA,sBACA,wBACA,mCACA,eACA,gBACA,SACA,KACJ,EACaC,GAAaC,GAAiBF,EAAgB,ECv7EpD,IAAMG,EAAgB,CAACC,EAAKC,IACxB,KAAK,UAAUD,EAAKE,GAAoBD,CAAM,EAE5CC,GAAqB,CAACC,EAAKC,IAChC,OAAOA,GAAU,SACVA,EAAM,SAAS,EAEnBA,ECjBX,SAAS,iBAAiB,mBAAoB,IAAM,CAElD,IAAMC,EAAe,SAAS,eAC5B,cACF,EACMC,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAsB,SAAS,eACnC,qBACF,EACMC,EAAe,SAAS,eAC5B,cACF,EACMC,EAAc,SAAS,eAC3B,aACF,EACMC,EAAiB,SAAS,eAC9B,gBACF,EACMC,EAAkB,SAAS,eAC/B,iBACF,EAMA,SAASC,EAAgBC,EAA+B,CACtD,GAAI,CAACA,EAAS,MAAO,OAErB,IAAMC,EAAkB,SAAS,eAAe,GAAGD,EAAS,EAAE,WAAW,EAEzE,UAAU,UACP,UAAUA,EAAS,KAAK,EACxB,KAAK,IAAM,CAEVA,EAAS,UAAU,IAAI,QAAQ,E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",
  "names": ["alphabet", "lookupTable", "i", "encode", "input", "skip", "bits", "output", "encodeByte", "byte", "decode", "o", "decodeChar", "char", "val", "c", "lookUpTable", "getCrc32", "buf", "b", "crc", "i", "t", "isBytes", "a", "abytes", "b", "lengths", "isBytes", "aexists", "instance", "checkFinished", "aoutput", "out", "abytes", "min", "clean", "arrays", "i", "createView", "arr", "rotr", "word", "shift", "utf8ToBytes", "str", "toBytes", "data", "utf8ToBytes", "abytes", "Hash", "createHasher", "hashCons", "hashC", "msg", "toBytes", "tmp", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "l", "Chi", "a", "b", "c", "Maj", "HashMD", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "aexists", "toBytes", "abytes", "buffer", "len", "pos", "take", "dataView", "out", "aoutput", "clean", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "SHA256_IV", "SHA224_IV", "SHA256_K", "SHA256_W", "SHA256", "HashMD", "outputLen", "SHA256_IV", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "Chi", "T2", "Maj", "clean", "SHA224", "SHA224_IV", "sha224", "createHasher", "SHA224", "sha224", "sha224", "data", "JSON_KEY_PRINCIPAL", "SELF_AUTHENTICATING_SUFFIX", "ANONYMOUS_SUFFIX", "MANAGEMENT_CANISTER_PRINCIPAL_TEXT_STR", "fromHexString", "hexString", "_a", "byte", "toHexString", "bytes", "str", "Principal", "_Principal", "_arr", "publicKey", "sha", "sha224", "other", "hex", "text", "maybePrincipal", "obj", "canisterIdNoDash", "arr", "decode", "principal", "checksumArrayBuf", "getCrc32", "checksum", "array", "matches", "encode", "i", "cmp", "CandidError", "message", "index", "ByteReader", "buffer", "byte", "length", "bytes", "result", "shift", "byteLength", "signed", "value", "msbMask", "CandidTypeTag", "createNameLookup", "names", "map", "name", "hash", "fieldHash", "utf8", "p", "mod", "i", "c", "decodeCandid", "fieldNamesMap", "reader", "decodedData", "errorMsg", "errorIdx", "typeTable", "magic", "numberOfTypes", "currentParseOffset", "typeCode", "typeDef", "optInnerTypeIdx", "vecElementTypeIdx", "numRecordFields", "recordFields", "j", "id", "typeIdx", "a", "b", "numVariantOptions", "variantOptions", "numFuncArgs", "funcArgs", "numFuncRets", "funcRets", "numFuncModes", "funcModes", "modeByte", "numServiceMethods", "serviceMethods", "nameLen", "funcTypeIdx", "numberOfArgTypes", "argTypeIndices", "decodedValues", "typeOrIndex", "decodeValue", "e", "decodePrincipalValue", "principalTag", "principalLen", "Principal", "currentTypeTag", "boolByte", "textLength", "optDef", "presentByte", "vecDef", "vectorLength", "elements", "recordDef", "record", "field", "fieldKey", "variantDef", "variantIdx", "selectedOption", "variantValue", "funcTag", "principal", "funcMethodNameLen", "funcMethodName", "candidFieldNames", "fieldNames", "createNameLookup", "JSONstringify", "obj", "indent", "jsonBigintReplacer", "key", "value", "unifiedInput", "hexOutput", "escapedStringOutput", "base64Output", "arrayOutput", "hexArrayOutput", "resultContainer", "copyToClipboard", "textarea", "feedbackElement", "err", "convertEscapedStringToHex", "inputString", "hexResult", "encoder", "i", "char", "hexChars", "encodedBytes", "byte", "convertHexToEscapedString", "hexString", "escapedString", "convertHexToBase64", "bytes", "convertHexToArray", "convertHexToHexArray", "hexBytes", "convertBase64ToHex", "base64String", "binaryString", "e", "determineAndConvertToHex", "input", "trimmedInput", "byteStrings", "s", "byteStr", "byteValue", "hex", "processInput", "decodedResult", "hexToDecode", "conversionError", "displayEmptyInputMessage", "displayError", "displayResult", "decodeCandid", "fieldNames", "message", "errorDiv", "messageDiv", "result", "partialDataP", "pre", "JSONstringify", "successDiv"]
}
